{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AutoComplete.js","webpack:///./components/Block.js","webpack:///./components/CartItem.js","webpack:///./components/Client.js","webpack:///./components/ClientSearch.js","webpack:///./components/Clients.js","webpack:///./components/ColumnTally.js","webpack:///./components/DaySelector.js","webpack:///./components/DeleteClient.js","webpack:///./components/ErrorMessage.js","webpack:///./components/Header.js","webpack:///./components/InfoBar.js","webpack:///./components/Meta.js","webpack:///./components/Modal.js","webpack:///./components/Nav.js","webpack:///./components/Page.js","webpack:///./components/Pagination.js","webpack:///./components/RemoveFromCart.js","webpack:///./components/ReviewMessage.js","webpack:///./components/SignInNoDisplay.js","webpack:///./components/Signout.js","webpack:///./components/SingleClient.js","webpack:///./components/Slider.js","webpack:///./components/Submitted.js","webpack:///./components/SuccessCount.js","webpack:///./components/TimePicker.js","webpack:///./components/User.js","webpack:///./components/styles/CartStyles.js","webpack:///./components/styles/ClientStyles.js","webpack:///./components/styles/CloseButton.js","webpack:///./components/styles/DropDown.js","webpack:///./components/styles/NavStyles.js","webpack:///./components/styles/PaginationStyles.js","webpack:///./components/styles/Supreme.js","webpack:///./config.js","webpack:///./lib/withData.js","webpack:///./pages/_app.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-boost\"","webpack:///external \"chroma-js\"","webpack:///external \"date-fns\"","webpack:///external \"downshift\"","webpack:///external \"graphql-tag\"","webpack:///external \"lodash.debounce\"","webpack:///external \"next-with-apollo\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"nprogress\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-select\"","webpack:///external \"react-svg-buttons\"","webpack:///external \"react-transition-group\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import React, { Component } from 'react'\nimport Downshift, { resetIdCounter } from 'downshift'\nimport Router from 'next/router'\nimport { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport debounce from 'lodash.debounce'\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\n\nconst SEARCH_CLIENTS_QUERY = gql`\n  query SEARCH_CLIENTS_QUERY($searchTerm: String!) {\n    clients(\n      orderBy: updatedAt_DESC\n      where: {\n        OR: [\n          { firstName_contains: $searchTerm }\n          { lastName_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      firstName\n      lastName\n    }\n  }\n`\nconst Img = styled.img`\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n`\n\nfunction routeToClient(client) {\n  Router.push({\n    pathname: '/client',\n    query: {\n      id: client.id,\n    },\n  })\n}\n\nclass AutoComplete extends Component {\n  state = {\n    clients: [],\n    loading: false,\n  }\n  onChange = debounce(async (e, client) => {\n    console.log('Searching...')\n    this.setState({ loading: true })\n    const res = await client.query({\n      query: SEARCH_CLIENTS_QUERY,\n      variables: { searchTerm: e.target.value },\n    })\n    this.setState({\n      clients: res.data.clients,\n      loading: false,\n    })\n  }, 350)\n  render() {\n    resetIdCounter()\n    return (\n      <SearchStyles>\n        <Downshift\n          onChange={routeToClient}\n          itemToString={client =>\n            client === null\n              ? ''\n              : client.lastName + ',' + ' ' + client.firstName\n          }\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex,\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      type: 'search',\n                      placeholder: 'Search Clients',\n                      id: 'search',\n                      className: this.state.loading ? 'loading' : '',\n                      spellCheck: false,\n                      onChange: e => {\n                        e.persist()\n                        this.onChange(e, client)\n                      },\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              {isOpen && (\n                <DropDown>\n                  {this.state.clients.map((item, index) => (\n                    <DropDownItem\n                      {...getItemProps({ item })}\n                      key={item.id}\n                      highlighted={index === highlightedIndex}\n                    >\n                      <Img src={item.image} alt={item.firstName} />\n                      {item.lastName}, {item.firstName}\n                    </DropDownItem>\n                  ))}\n                  {!this.state.clients.length && !this.state.loading && (\n                    <DropDownItem> Nothing Found for {inputValue}</DropDownItem>\n                  )}\n                </DropDown>\n              )}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    )\n  }\n}\n\nexport default AutoComplete\nexport { SEARCH_CLIENTS_QUERY }\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Tabs = styled.div`\n  display: flex;\n  padding: 10px;\n  min-width: 150px;\n  height: 45px;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  transition: all 400ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  .textWhite {\n    color: white;\n    text-transform: uppercase;\n    font-size: 10px;\n  }\n  &:hover {\n    background: rgba(240, 240, 240, 0.3);\n  }\n`\n\nconst Block = props => (\n  <>\n    <Tabs>\n      <p className=\"textWhite\">{props.name}</p>\n    </Tabs>\n  </>\n)\n\nexport default Block\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport RemoveFromCart from './RemoveFromCart'\n\nconst ConfirmationStyles = styled.li`\n  padding: 0rem 10px;\n  margin: 0 10px;\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\n  color: black;\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 10px;\n\n  a {\n    color: black;\n    font-size: 12px;\n    padding: 6px 0;\n    &:hover {\n      background: rgba(100, 100, 230, 0.2);\n    }\n  }\n`\n\nconst CartItem = ({ cartItem }) => {\n  // first check if that item exists\n  if (!cartItem.client)\n    return (\n      <ConfirmationStyles>\n        <p>This client has been deleted</p>\n        <RemoveFromCart id={cartItem.id} />\n      </ConfirmationStyles>\n    )\n  return (\n    <ConfirmationStyles>\n      <Link\n        href={{\n          pathname: '/client',\n          query: { id: cartItem.client.id },\n        }}\n      >\n        <a>\n          {cartItem.client.firstName} {cartItem.client.lastName}\n        </a>\n      </Link>\n      <RemoveFromCart id={cartItem.id} />\n    </ConfirmationStyles>\n  )\n}\n\nCartItem.propTypes = {\n  cartItem: PropTypes.object.isRequired,\n}\n\nexport default CartItem\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport { format } from 'date-fns'\nimport DeleteClient from './DeleteClient'\nimport ClientStyles from './styles/ClientStyles'\n\nexport default class Client extends Component {\n  static propTypes = {\n    client: PropTypes.object.isRequired,\n  }\n\n  render() {\n    const { client } = this.props\n    return (\n      <ClientStyles>\n        <div className=\"buttonList\">\n          <Link\n            href={{\n              pathname: '/client',\n              query: { id: client.id },\n            }}\n          >\n            <a>\n              {client.lastName}, {client.firstName}\n            </a>\n          </Link>\n\n          <p>{client.cellPhone}</p>\n          <p>{format(client.birthDay, 'MMMM Do, YYYY')}</p>\n          <Link\n            href={{\n              pathname: 'update',\n              query: { id: client.id },\n            }}\n          >\n            <button>Edit</button>\n          </Link>\n          <DeleteClient\n            firstName={client.firstName}\n            lastName={client.lastName}\n            id={client.id}\n          >\n            Delete{' '}\n          </DeleteClient>\n        </div>\n      </ClientStyles>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Downshift, { resetIdCounter } from 'downshift'\nimport { ApolloConsumer } from 'react-apollo'\nimport { SEARCH_CLIENTS_QUERY } from './AutoComplete'\nimport styled from 'styled-components'\nimport debounce from 'lodash.debounce'\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\n\nconst InputDiv = styled.div`\n  border: 2px solid rgba(20, 110, 240, 1);\n  border-radius: 5px;\n`\n\nconst Img = styled.img`\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n`\n\nclass ClientSearch extends Component {\n  state = {\n    clients: [],\n    loading: false,\n  }\n  onChange = debounce(async (e, client) => {\n    console.log('Searching...')\n    this.setState({ loading: true })\n    const res = await client.query({\n      query: SEARCH_CLIENTS_QUERY,\n      variables: { searchTerm: e.target.value, userId: this.props.id },\n    })\n    console.log(res)\n    this.setState({\n      clients: res.data.clients,\n      loading: false,\n    })\n  }, 350)\n  render() {\n    resetIdCounter()\n    return (\n      <SearchStyles>\n        <Downshift\n          itemToString={client =>\n            client === null\n              ? ''\n              : client.lastName + ',' + ' ' + client.firstName\n          }\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex,\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <InputDiv>\n                    <input\n                      {...getInputProps({\n                        type: 'search',\n                        placeholder: 'Search Clients',\n                        id: 'search',\n                        className: this.state.loading ? 'loading' : '',\n                        spellCheck: false,\n                        onChange: e => {\n                          e.persist()\n                          this.onChange(e, client)\n                        },\n                      })}\n                    />\n                  </InputDiv>\n                )}\n              </ApolloConsumer>\n              {isOpen && (\n                <DropDown>\n                  {this.state.clients.map((item, index) => (\n                    <DropDownItem\n                      {...getItemProps({ item })}\n                      key={item.id}\n                      highlighted={index === highlightedIndex}\n                    >\n                      <Img src={item.image} alt={item.firstName} />\n                      {item.lastName}, {item.firstName}\n                    </DropDownItem>\n                  ))}\n                  {!this.state.clients.length && !this.state.loading && (\n                    <DropDownItem> Nothing Found for {inputValue}</DropDownItem>\n                  )}\n                </DropDown>\n              )}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    )\n  }\n}\n\nexport default ClientSearch\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Client from './Client'\nimport Pagination from './Pagination'\nimport { perPage } from '../config'\nimport { CURRENT_USER_QUERY } from './User'\nimport Error from './ErrorMessage'\n\nconst SINGLE_CLIENT_QUERY = gql`\n  query SINGLE_CLIENT_QUERY($id: ID!) {\n    client(id: $id) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n      user {\n        id\n      }\n    }\n  }\n`\n\nconst ALL_CLIENTS_QUERY = gql`\n  query ALL_CLIENTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    clients(first: $first, skip: $skip, orderBy: lastName_ASC) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n      user {\n        id\n      }\n    }\n  }\n`\n\nconst List = styled.div`\n  display: grid;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  grid-template-rows: 1fr 50vh 1fr;\n  position: relative;\n  z-index: 0;\n`\n\nconst Clientlisting = styled.div`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-auto-rows: 20px;\n  background-color: rgba(20, 20, 100, 0.1);\n  max-width: 100%;\n  grid-gap: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding-top: 0px;\n\n  overflow-y: scroll;\n  padding-bottom: 0px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n`\n\nclass Clients extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Query query={CURRENT_USER_QUERY}>\n          {({ data: { me } }) => {\n            return (\n              <List>\n                <Pagination user={me.id} page={this.props.page} />\n                <Query\n                  query={ALL_CLIENTS_QUERY}\n                  variables={{\n                    skip: this.props.page * perPage - perPage,\n                    first: 19,\n                  }}\n                >\n                  {({ data, error, loading }) => {\n                    if (loading) return <p>Loading...</p>\n                    if (error) return <p>Error: {error.message}</p>\n                    return (\n                      <Clientlisting>\n                        {data.clients.map(client => (\n                          <Client client={client} key={client.id} />\n                        ))}\n                      </Clientlisting>\n                    )\n                  }}\n                </Query>\n                <Pagination user={me.id} page={this.props.page} />\n              </List>\n            )\n          }}\n        </Query>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Clients\nexport { ALL_CLIENTS_QUERY, SINGLE_CLIENT_QUERY }\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst StyledPara = styled.p`\n  font-family: 'Montserrat', sans-serif;\n`\n\nclass ColumnTally extends Component {\n  render() {\n    const cart = this.props.cart\n    const itemsToRender = cart.filter(\n      cartItem => cartItem.confirmationStatus === `${this.props.name}`,\n    )\n    const filteredCol = itemsToRender.length\n\n    return (\n      <StyledPara style={{ color: `${this.props.color}` }}>\n        {filteredCol} of{' '}\n        {cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0)}\n      </StyledPara>\n    )\n  }\n}\n\nexport default ColumnTally\n","import React from 'react'\nimport styled from 'styled-components'\nimport { format, addWeeks, eachDay } from 'date-fns'\n\nconst DateSelector = styled.div`\n  grid-row: 2;\n  margin: 0 20px;\n  border-radius: 8px 8px 8px 8px;\n  position: relative;\n  display: grid;\n  width: 245px;\n  height: 100%;\n  grid-template-columns: 1;\n  grid-template-rows: 35px 30px 1fr;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.1);\n  background: white;\n\n  .month {\n    width: 100%;\n    display: grid;\n    height: 35px;\n    background: rgba(20, 110, 220, 1);\n    grid-row: 1;\n    border-radius: 8px 8px 0 0;\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    color: white;\n  }\n`\n\nconst Day = styled.div`\n  display: flex;\n  grid-row: 3;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  justify-content: center;\n`\nconst Days = styled.input`\n  display: flex;\n  margin: 2px;\n  width: 12.25%;\n  height: 40%;\n  color: white;\n  grid-row: 3;\n  background: #3d5866;\n  align-content: center;\n  text-align: center;\n  outline: none;\n  font-family: 'Montserrat', sans-serif;\n  transition: 0.2s;\n\n  border: none;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  &:first-child {\n    background: rgba(20, 110, 240, 0.8);\n  }\n  &:hover {\n    transform: scale(1.1);\n  }\n  &:active {\n    background: lavender;\n  }\n`\nconst StyledDiv = styled.div`\n  display: flex;\n  color: lightslategray;\n  margin: 2px 1px;\n  grid-row: 2;\n  justify-content: space-around;\n  background: transparent;\n\n  p {\n    margin: 0 0px;\n  }\n`\nconst today = new Date()\nconst twoWeeks = addWeeks(today, 2)\nconst result = eachDay(today, twoWeeks)\nconst fixedArray = result.splice(-1, 1)\nconst oneWeek = addWeeks(today, 1)\nconst dayNameResult = eachDay(today, oneWeek)\nconst fixedOneWeek = dayNameResult.splice(-1, 1)\n\nconst DaySelector = props => (\n  <DateSelector>\n    <div className=\"month\">{format(today, 'MMMM')}</div>\n\n    <StyledDiv>\n      {dayNameResult.map(weekDayName => {\n        return <p key={weekDayName}> {format(weekDayName, 'dd')}</p>\n      })}\n    </StyledDiv>\n\n    <Day>\n      {result.map(day => {\n        return (\n          <Days\n            key={day}\n            readOnly\n            name=\"date\"\n            onChange={props.saveToState}\n            value={format(day, 'D')}\n          />\n        )\n      })}\n    </Day>\n  </DateSelector>\n)\n\nexport default DaySelector\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { ALL_CLIENTS_QUERY } from './Clients'\n\nconst DELETE_CLIENT_MUTATION = gql`\n  mutation DELETE_CLIENT_MUTATION($id: ID!) {\n    deleteClient(id: $id) {\n      id\n      firstName\n    }\n  }\n`\n\nclass DeleteClient extends Component {\n  update = (cache, payload) => {\n    const data = cache.readQuery({ query: ALL_CLIENTS_QUERY })\n    console.log(data, payload)\n\n    data.clients = data.clients.filter(\n      client => client.id !== payload.data.deleteClient.id,\n    )\n\n    cache.writeQuery({ query: ALL_CLIENTS_QUERY, data })\n  }\n  render() {\n    const firstName = this.props.firstName\n    const lastName = this.props.lastName\n    return (\n      <Mutation\n        mutation={DELETE_CLIENT_MUTATION}\n        variables={{\n          id: this.props.id,\n          firstName: this.props.firstName,\n        }}\n        update={this.update}\n      >\n        {(deleteClient, { error }) => (\n          <button\n            onClick={() => {\n              if (\n                confirm(\n                  `Are you sure you want to delete ${firstName} ${lastName}`,\n                )\n              ) {\n                deleteClient().catch(err => {\n                  alert(err.message)\n                })\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteClient\n","import styled from 'styled-components'\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: rgba(250, 0, 0, 0.5);\n  margin: 2rem 0;\n  border-left: 5px solid rgba(220, 0, 0, 0.7);\n\n  p {\n    margin: 0;\n    font-weight: 100;\n    color: white;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null\n  if (\n    error.networkError &&\n    error.networkError.result &&\n    error.networkError.result.errors.length\n  ) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Oops...</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ))\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Oops...</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  )\n}\n\nDisplayError.defaultProps = {\n  error: {},\n}\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n}\n\nexport default DisplayError\n","import React, { Component } from 'react'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport Nav from './Nav'\nimport { Query } from 'react-apollo'\nimport { CURRENT_USER_QUERY } from './User'\nimport Router from 'next/router'\nimport NProgress from 'nprogress'\nimport InfoBar from './InfoBar'\nimport Slider from './Slider'\nimport { PlusButton } from 'react-svg-buttons'\nimport SignInNoDisplay from './SignInNoDisplay'\nimport AutoComplete from './AutoComplete'\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start()\n}\nRouter.onRouteChangeComplete = () => {\n  NProgress.done()\n}\nRouter.onRouteChangeError = () => {\n  NProgress.done()\n}\n\nconst Logo = styled.h1`\n  font-size: 1.5rem;\n  margin-left: 2rem;\n  display: flex;\n  align-self: center;\n  justify-self: center;\n  position: relative;\n  z-index: 0;\n  a {\n    padding: 0rem 1rem;\n    background: rgba(10, 110, 240, 1);\n    color: white;\n    text-transform: uppercase;\n    text-decoration: none;\n  }\n`\n\nconst StyledHeader = styled.header`\n  .bar {\n    border-bottom: 1px solid ${props => props.theme.lightgrey};\n    display: grid;\n    grid-template-columns: auto 1fr;\n    justify-content: space-between;\n    align-items: stretch;\n    z-index: -2;\n  }\n  .sub-bar {\n    display: grid;\n    grid-template-columns: 50px 295px 1fr;\n    height: 45px;\n    align-self: center;\n    border-bottom: 1px solid ${props => props.theme.lightgrey};\n    opacity: 1;\n  }\n`\n\nconst Plus = styled.button`\n  cursor: pointer;\n  border: none;\n  margin-top: 3px;\n  outline: none;\n`\n\nclass Header extends Component {\n  render() {\n    return (\n      <StyledHeader>\n        <div className=\"bar\">\n          <Logo>\n            <Link href=\"/\">\n              <a>Perfect Day Reminders</a>\n            </Link>\n          </Logo>\n          <Nav />\n        </div>\n        <SignInNoDisplay>\n          <div className=\"sub-bar\">\n            <Link href=\"/addclient\">\n              <a>\n                <Plus>\n                  <PlusButton\n                    color=\"rgba(100,100,200,1)\"\n                    size={35}\n                    thickness={2}\n                  />\n                </Plus>\n              </a>\n            </Link>\n            <AutoComplete />\n            <InfoBar />\n            <Slider />\n          </div>\n        </SignInNoDisplay>\n      </StyledHeader>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport { TOGGLE_CART_MUTATION } from './Slider'\nimport { CURRENT_USER_QUERY } from './User'\nimport Link from 'next/link'\nimport SuccessCount from './SuccessCount'\nimport styled from 'styled-components'\nimport Block from './Block'\nimport Slider from './Slider'\n\nconst StyledBar = styled.div`\n  display: flex;\n  position: relative;\n  height: 44px;\n  width: 100%;\n  margin: 0;\n  opacity: 1;\n  .tab2 {\n    background: purple;\n    height: 44px;\n    opacity: 0.8;\n  }\n  .tab3 {\n    background: blue;\n    height: 44px;\n    opacity: 0.8;\n  }\n  button {\n    width: 150px;\n  }\n`\n\nconst Confirmer = styled.div`\n  display: flex;\n  background: lightseagreen;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  color: white;\n  text-transform: uppercase;\n  font-size: 10px;\n  padding: 5px 20px;\n  position: relative;\n  cursor: pointer;\n  .confirmations {\n    display: inline-block;\n  }\n`\nclass InfoBar extends Component {\n  render() {\n    return (\n      <StyledBar>\n        <Link href=\"/bulk\">\n          <a className=\"tab2\">\n            <Block name=\"Bulk Sender\" />\n          </a>\n        </Link>\n        <Link href=\"/schedule\">\n          <a className=\"tab3\">\n            <Block name=\"Schedule\" />\n          </a>\n        </Link>\n        <Query query={CURRENT_USER_QUERY}>\n          {({ data: { me } }) => (\n            <Mutation mutation={TOGGLE_CART_MUTATION}>\n              {toggleCart => (\n                <Confirmer onClick={toggleCart}>\n                  <span className=\"confirmations\">Confirmations</span>\n                  <SuccessCount\n                    count={\n                      me &&\n                      me.cart.reduce(\n                        (tally, cartItem) => tally + cartItem.quantity,\n                        0,\n                      )\n                    }\n                  />\n                </Confirmer>\n              )}\n            </Mutation>\n          )}\n        </Query>\n        <Slider />\n      </StyledBar>\n    )\n  }\n}\n\nexport default InfoBar\n","import Head from 'next/head'\n\nconst Meta = () => (\n  <Head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta charSet=\"utf-8\" />\n    <link rel=\"shortcut icon\" href=\"/static/favicon.png\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/nprogress.css\" />\n    <title>Perfect Day Reminders</title>\n  </Head>\n)\n\nexport default Meta\n","import React, { Component } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\n\nimport ClientSearch from './ClientSearch'\n\nconst OPEN_MODAL_QUERY = gql`\n  query {\n    openModal @client\n  }\n`\nconst TOGGLE_MODAL_MUTATION = gql`\n  mutation {\n    toggleModal @client\n  }\n`\n\nconst SINGLE_REASON_QUERY = gql`\n  query SINGLE_REASON_QUERY($id: ID!) {\n    reason(id: $id) {\n      id\n      name\n      color\n    }\n  }\n`\n\nconst BackDrop = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 990;\n`\n\nconst Modall = styled.div`\n  background-color: #fff;\n  border-radius: 25px;\n  display: grid;\n  grid-template-rows: 1fr 55px;\n  grid-template-columns: 1fr;\n  position: absolute;\n  align-items: flex-start;\n  width: 500px;\n  height: 500px;\n  padding: 15px 25px;\n  z-index: 999;\n  box-shadow: 1px 1px 5px 3px rgba(0, 0, 0, 0.3);\n`\n\nconst StyledInput = styled.select`\n  width: 100%;\n  background: rgba(20, 110, 240, 0.5);\n  margin: 20px 0;\n  border: none;\n  font-size: 2rem;\n  font-weight: 700;\n  color: white;\n  outline: none;\n`\nconst StyledTextArea = styled.textarea`\n  padding: 5px;\n  width: 100%;\n  background: transparent;\n  font-size: 2rem;\n  outline: none;\n  resize: none;\n  border: 2px solid rgba(220, 220, 220, 1);\n\n  &:focus {\n    outline: none;\n  }\n`\nconst Date = styled.div`\n  grid-column: 1;\n  grid-row: 1;\n  justify-content: flex-end;\n  border-radius: 25px 25px 0 0;\n\n  overflow: hidden;\n  height: 100%;\n  padding: 5px 20px 0px 20px;\n\n  p {\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    color: ${props => props.theme.blue};\n    display: block;\n\n    padding: 0px 0px;\n\n    font-size: 2.2rem;\n    position: relative;\n  }\n\n  h3 {\n    margin: 0;\n  }\n`\nconst Cancel = styled.button`\n  background-color: #fff;\n  border-radius: 20px;\n  display: grid;\n  grid-row: 2;\n  margin-left: 25px;\n  position: absolute;\n  left: 0;\n  align-items: center;\n  height: 60%;\n  background: rgba(220, 100, 120, 1);\n  color: white;\n  width: 100px;\n  cursor: pointer;\n  border: none;\n  transition: 0.3s;\n  font-size: 18px;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.1);\n  }\n`\n\nconst Save = styled.button`\n  background-color: #fff;\n  border: none;\n  border-radius: 20px;\n  display: grid;\n  right: 0;\n  grid-row: 2;\n  cursor: pointer;\n  position: absolute;\n  align-items: center;\n  width: 100px;\n  height: 60%;\n  background: rgba(20, 200, 120, 1);\n  color: white;\n  font-size: 18px;\n  margin-right: 25px;\n  transition: 0.3s;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.1);\n  }\n`\n// const SAMPLE = ['Fraxel', 'Hair']\nclass Modal extends Component {\n  state = {\n    selection: [],\n    reason: '',\n    date: '',\n    startTime: '',\n    length: '',\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  // handleSearch = () => {\n  //   debounce(async (e, client) => {\n  //     console.log('Searching...')\n  //     this.setState({ loading: true })\n  //     const res = await client.query({\n  //       query: SEARCH_CLIENTS_QUERY,\n  //       variables: { searchTerm: e.target.value },\n  //     })\n  //     this.setState({\n  //       clients: res.data.clients,\n  //       loading: false,\n  //     })\n  //   }, 350)\n  // }\n  render() {\n    return (\n      <Mutation mutation={TOGGLE_MODAL_MUTATION}>\n        {toggleModal => (\n          <Query query={OPEN_MODAL_QUERY}>\n            {({ data }) => {\n              if (!data.openModal) {\n                return null\n              }\n              return (\n                <BackDrop>\n                  <Modall>\n                    <form\n                      onSubmit={async e => {\n                        e.preventDefault()\n                        const res = await createAppointment()\n                        console.log(res)\n                      }}\n                    >\n                      <Date>\n                        <p>{format(this.props.date, 'MMMM Do, YYYY')}</p>\n                        <p>{this.props.time}</p>\n                      </Date>\n                      <ClientSearch />\n\n                      <StyledInput\n                        name=\"reason\"\n                        type=\"select\"\n                        multiple={false}\n                        value={this.state.reason}\n                        onChange={this.handleChange}\n                      >\n                        {this.props.reasons.map((reason, i) => (\n                          <option value={reason.name} key={reason.name}>\n                            {reason.name}\n                          </option>\n                        ))}\n                      </StyledInput>\n\n                      <label htmlFor=\"note\">\n                        Notes:\n                        <StyledTextArea />\n                      </label>\n\n                      <Cancel onClick={toggleModal}>Cancel</Cancel>\n                      <Save onClick={toggleModal}>Save</Save>\n                    </form>\n                  </Modall>\n                </BackDrop>\n              )\n            }}\n          </Query>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Modal\nexport { OPEN_MODAL_QUERY, TOGGLE_MODAL_MUTATION }\n","import Link from 'next/link'\nimport NavStyles from './styles/NavStyles'\nimport User from './User'\nimport Signout from './Signout'\nimport styled from 'styled-components'\n\nconst Sign = styled.a`\n  padding: 4px 8px;\n  border-radius: 5px;\n  background: rgba(20, 110, 220, 0.8);\n`\n\nconst Nav = () => (\n  <User>\n    {({ data: { me } }) => (\n      <NavStyles>\n        {me && (\n          <>\n            {' '}\n            <Link href=\"/account\">\n              <a>Account</a>\n            </Link>\n            <Link href=\"/clients\">\n              <a>Clients</a>\n            </Link>\n            <Signout />\n          </>\n        )}\n        {!me && (\n          <>\n            {' '}\n            <Link href=\"/pricing\">\n              <a>Pricing</a>\n            </Link>\n            <Link href=\"/login\">\n              <a>Login</a>\n            </Link>\n            <Link href=\"/signup\">\n              <Sign>Sign Up</Sign>\n            </Link>\n          </>\n        )}\n      </NavStyles>\n    )}\n  </User>\n)\n\nexport default Nav\n","import React, { Component } from 'react'\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components'\nimport Header from './Header'\nimport Meta from './Meta'\n\nconst theme = {\n  red: '#FF0000',\n  blue: 'rgba(100,100,230,1)',\n  green: 'rgba(50,230,150,1)',\n  lightblue: 'rgba(100,160,250,1)',\n  primary: '#3d5866',\n  secondary: '#3d5866',\n  tertiary: '#3d5866',\n  quaternary: '#3d5866',\n  black: '#393939',\n  grey: '#3A3A3A',\n  lightgrey: '#E1E1E1',\n  offWhite: '#EDEDED',\n  maxWidth: '100vw',\n  innerWidth: '1000px',\n  bs: '0 12px 24px 0 rgba(0,0,0,0.09)',\n}\nconst StyledPage = styled.div`\n  background: white;\n  color: ${props => props.theme.black};\n`\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  padding: 0rem 0 0 0;\n`\n\ninjectGlobal`\n\t@font-face {\n\t\tfont-family: 'radnika_next';\n\t\tsrc: url('/static/radnikanext-medium-webfont.woff2')\n      format('woff2');\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t}\n\thtml {\n\t\tbox-sizing: border-box;\n\t\tfont-size: 10px;\n\n\t}\n\t*, *:before, *:after {\n\t\tbox-sizing: inherit;\n\t}\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tfont-size: 1.4rem;\n\t\tline-height: 2;\n\t\tfont-family: 'radnika_next';\n\t}\na {\ntext-decoration: none;\ncolor: ${theme.black};\n}\n`\n\nclass Page extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <Meta />\n          <Header />\n          <Inner>{this.props.children}</Inner>\n        </StyledPage>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default Page\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport Link from 'next/link'\nimport PaginationStyles from './styles/PaginationStyles'\n\nimport { perPage } from '../config'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY($userId: ID!) {\n    clientsConnection(where: { user: { id: $userId } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`\nconst Pagination = props => (\n  <Query query={PAGINATION_QUERY} variables={{ userId: props.user }}>\n    {({ data, loading, error }) => {\n      if (loading) return <p>Loading...</p>\n      const count = data.clientsConnection.aggregate.count\n      const pages = Math.ceil(count / perPage)\n      const page = props.page\n      return (\n        <PaginationStyles>\n          <Link\n            prefetch\n            href={{ pathname: 'clients', query: { page: page - 1 } }}\n          >\n            <a className=\"prev\" aria-disabled={page <= 1}>\n              ← Prev\n            </a>\n          </Link>\n          <p className=\"totes\">\n            Page {props.page} of <span className=\"totalPages\">{pages}</span>\n          </p>\n          <p className=\"totes\">{count} Clients Total</p>\n          <Link\n            prefetch\n            href={{ pathname: 'clients', query: { page: page + 1 } }}\n          >\n            <a className=\"next\" aria-disabled={page >= pages}>\n              Next →\n            </a>\n          </Link>\n        </PaginationStyles>\n      )\n    }}\n  </Query>\n)\n\nexport default Pagination\nexport { PAGINATION_QUERY }\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport gql from 'graphql-tag'\nimport { CURRENT_USER_QUERY } from './User'\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`\n\nconst BigButton = styled.button`\n  font-size: 1rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`\n\nclass RemoveFromCart extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  }\n  // This gets called as soon as we get a response back from the server after a mutation has been performed\n  update = (cache, payload) => {\n    // 1. first read the cache\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY })\n    // 2. remove that item from the cart\n    const cartItemId = payload.data.removeFromCart.id\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId)\n    // 3. write it back to the cache\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data })\n  }\n  render() {\n    return (\n      <Mutation\n        mutation={REMOVE_FROM_CART_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n        optimisticResponse={{\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id,\n          },\n        }}\n      >\n        {(removeFromCart, { loading, error }) => (\n          <BigButton\n            disabled={loading}\n            onClick={() => {\n              removeFromCart().catch(err => alert(err.message))\n            }}\n            title=\"Delete Item\"\n          >\n            &times;\n          </BigButton>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default RemoveFromCart\nexport { REMOVE_FROM_CART_MUTATION }\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport { Query, Mutation } from 'react-apollo'\nimport DaySelector from './DaySelector'\nimport { format, addDays } from 'date-fns'\nimport Timer from './TimePicker'\nimport Submitted from './Submitted'\nimport { ALL_CLIENTS_REMINDERS } from './SingleClient'\nimport User from './User'\n\nconst SEND_TEXT_MUTATION = gql`\n  mutation SEND_TEXT_MUTATION(\n    $to: String!\n    $text: String!\n    $client: ID!\n    $user: ID!\n    $confirmationStatus: String!\n  ) {\n    createTextReminder(\n      to: $to\n      text: $text\n      client: $client\n      user: $user\n      confirmationStatus: $confirmationStatus\n    ) {\n      id\n      text\n      user {\n        id\n      }\n      client {\n        id\n      }\n    }\n  }\n`\n\nconst TEXT_TEMPLATES_QUERY = gql`\n  query TEXT_TEMPLATES_QUERY {\n    textTemplates {\n      id\n      name\n      content\n    }\n  }\n`\n\nconst Back = styled.form`\n  display: grid;\n  grid-template-columns: 280px 40px 1fr 100px;\n  grid-template-rows: 70px 1fr;\n  align-items: flex-end;\n  width: 100%;\n  height: 100%;\n  padding: 20px 20px;\n  z-index: 5;\n  border-radius: 20px;\n  border: 5px solid white;\n  box-shadow: 1px 0 4px 2px rgba(0, 0, 0, 0.1);\n  background-color: rgba(240, 240, 240, 1);\n`\n\nconst CharCount = styled.p`\n  font-size: 11px;\n  grid-column: 3;\n  grid-row: 2;\n  justify-self: flex-end;\n  margin: 2px 0;\n  z-index: 100;\n`\n\nconst Message = styled.textarea`\n  grid-column: 3;\n  grid-row: 2;\n  position: relative;\n  z-index: 6;\n  margin: 0 10px;\n  font-family: 'Montserrat', sans-serif;\n  color: rgba(20, 20, 20, 0.7);\n  width: 100%;\n  min-width: 250px;\n  padding: 10px;\n  height: 100%;\n  line-height: 22px;\n  max-height: 140px;\n  border-radius: 10px;\n  font-size: 1.5rem;\n  resize: none;\n  border: none;\n  background: rgba(250, 250, 250, 1);\n  box-shadow: 0 0 4px 3px rgba(0, 0, 0, 0.05);\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Error = styled.div`\n  display: block;\n  position: absolute;\n  min-width: 300px;\n  width: 30%;\n  text-align: center;\n  padding: 10px;\n  background: rgba(180, 110, 20, 0.9);\n  color: white;\n  border-radius: 5px;\n  bottom: 15px;\n  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.1),\n    0 6px 10px 5px rgba(0, 0, 0, 0.1), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\n  right: 20px;\n  z-index: 999;\n`\nconst Send = styled.button`\n  background: rgba(30, 110, 240, 1);\n  color: white;\n  font-weight: 800;\n  border: none;\n  width: 75px;\n  font-size: 2rem;\n  grid-column: 4;\n  grid-row: 2;\n  justify-self: flex-end;\n  height: 75px;\n  font-size: 1.8rem;\n  border-radius: 50%;\n  outline: none;\n  cursor: pointer;\n  transition: 0.1s;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.1);\n  &:active {\n    box-shadow: none;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n  }\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nclass ReviewMessage extends Component {\n  state = {\n    time: '8:00 am',\n    date: addDays(new Date(), 3),\n    text: '',\n    message: 'Appointment Reminder has Been Sent',\n  }\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    const time = this.state.time\n    const date = format(this.state.date, 'ddd, MMM Do')\n    const text = this.state.text\n    const to = this.props.cellPhone.toString()\n    return (\n      <User>\n        {({ data: { me } }) => {\n          const business = me.businessName.toString()\n          const phone = me.cellPhone.toString()\n          return (\n            <Query query={TEXT_TEMPLATES_QUERY}>\n              {({ data }) => {\n                const defaultTemplate = data.textTemplates[0].content\n                  .replace('<business>', business)\n                  .replace('<phone>', phone)\n                  .replace('<time>', time)\n                  .replace('<date>', date)\n                return (\n                  <Mutation\n                    mutation={SEND_TEXT_MUTATION}\n                    variables={{\n                      to: to,\n                      text: text,\n                      client: this.props.id,\n                      user: me.id,\n                      confirmationStatus: 'UNCONFIRMED',\n                    }}\n                    refetchQueries={[\n                      {\n                        query: ALL_CLIENTS_REMINDERS,\n                        variables: { client: this.props.id },\n                      },\n                    ]}\n                  >\n                    {(createTextReminder, { error, loading, called }) => {\n                      return (\n                        <Back\n                          onSubmit={async e => {\n                            e.preventDefault()\n                            const res = await createTextReminder()\n\n                            console.log(res)\n                          }}\n                        >\n                          {error && (\n                            <Error>\n                              Appointment Reminder Failed to Send. Please Try\n                              Again Shortly\n                            </Error>\n                          )}\n                          {!error && !loading && called && (\n                            <Submitted message={this.state.message} />\n                          )}\n\n                          <>\n                            <DaySelector saveToState={this.saveToState} />\n                            {/* <Timer /> */}\n\n                            <Message\n                              readOnly\n                              name=\"text\"\n                              defaultValue={defaultTemplate}\n                              onChange={this.saveToState}\n                            />\n                            <CharCount>\n                              {defaultTemplate.length} of 160\n                            </CharCount>\n                            {defaultTemplate.length < 160 && (\n                              <Send type=\"submit\">Send</Send>\n                            )}\n                          </>\n                        </Back>\n                      )\n                    }}\n                  </Mutation>\n                )\n              }}\n            </Query>\n          )\n        }}\n      </User>\n    )\n  }\n}\nexport default ReviewMessage\nexport { TEXT_TEMPLATES_QUERY, SEND_TEXT_MUTATION }\n","import { Query } from 'react-apollo'\nimport { CURRENT_USER_QUERY } from './User'\n\nconst SignInNoDisplay = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({ data, loading }) => {\n      if (loading) return <p>Loading...</p>\n      if (!data.me) {\n        return null\n      }\n      return props.children\n    }}\n  </Query>\n)\n\nexport default SignInNoDisplay\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { CURRENT_USER_QUERY } from './User'\n\nconst SIGN_OUT_MUTATION = gql`\n  mutation SIGN_OUT_MUTATION {\n    signout {\n      message\n    }\n  }\n`\nconst Signout = () => (\n  <Mutation\n    mutation={SIGN_OUT_MUTATION}\n    refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n  >\n    {signout => <a onClick={signout}>Sign Out</a>}\n  </Mutation>\n)\n\nexport default Signout\n","import React, { Component, Fragment } from 'react'\nimport { format } from 'date-fns'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Head from 'next/head'\nimport styled from 'styled-components'\nimport { SINGLE_CLIENT_QUERY } from './Clients'\n\nconst ALL_CLIENTS_REMINDERS = gql`\n  query ALL_CLIENTS_REMINDERS($client: ID!) {\n    textReminders(client: $client, orderBy: createdAt_ASC) {\n      id\n      text\n      createdAt\n      updatedAt\n      confirmationStatus\n      user {\n        id\n      }\n      client {\n        id\n      }\n    }\n  }\n`\n\nconst GridSub = styled.div`\n  display: grid;\n  grid-column: 2;\n  grid-row: 1;\n  background-color: transparent;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  border: 5px solid white;\n  border-radius: 25px;\n  z-index: -1;\n  height: 100%;\n  width: 100%;\n  overscroll-behavior: contain;\n  overflow: scroll;\n  &:after {\n    width: calc(100% - 300px);\n    position: fixed;\n    display: flex;\n    margin: 0 auto;\n    content: 'Appointment Reminder Log';\n    justify-content: center;\n    border-bottom: 2px solid grey;\n    /* box-shadow: 0 2px 3px 3px rgba(0, 0, 0, 0.1); */\n    line-height: 28px;\n    color: white;\n    border-radius: 20px 20px 0 0;\n    padding: 2px 10px;\n    background: rgba(20,110,220,1);\n  }\n`\n\nconst Lister = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column;\n  /* padding-bottom: 20px; */\n  box-sizing: border-box;\n  padding-left: 6px;\n  overflow-y: scroll;\n  background: white;\n`\nconst TextChunk = styled.div`\n  display: flex;\n  align-content: center;\n  margin: 0px 30px;\n  padding: 0px;\n  border-top: 1.5px solid rgba(220, 220, 220, 0.4);\n  &:first-child {\n    margin-top: 30px;\n    border-top: none;\n  }\n\n  .message-text {\n    align-self: center;\n    background: rgba(220, 220, 220, 0.8);\n    font-family: 'Montserrat', sans-serif;\n    color: black;\n    display: inline-flex;\n    font-size: 12px;\n    padding: 10px 14px;\n    margin: 30px 0;\n    border-radius: 10px;\n    width: 40%;\n    height: 80%;\n    max-width: 600px;\n\n    @media (min-width: 1200px) {\n      font-size: 13px;\n    }\n  }\n  .confirmationStatus {\n    display: inline-flex;\n    justify-content: center;\n    flex-direction: column;\n    margin-left: 10%;\n  }\n`\nconst Nothing = styled.h2`\n  display: block;\n  font-size: 20px;\n  margin-top: 150px;\n  opacity: 0.5;\n  text-align: center;\n`\nconst P = styled.p`\n  font-size: 10px;\n  opacity: 0.7;\n  margin: 0;\n`\nconst PU = styled.p`\n  font-size: 10px;\n\n  margin: 0;\n  color: rgba(50, 50, 50, 0.6);\n`\nconst PG = styled.p`\n  font-size: 10px;\n\n  margin: 0;\n  color: rgba(10, 150, 10, 0.6);\n`\nconst PR = styled.p`\n  font-size: 10px;\n\n  margin: 0;\n  color: rgba(250, 50, 50, 0.6);\n`\nclass SingleClient extends Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n  scrollToBottom = () => {\n    this.myRef.current.scrollIntoView()\n  }\n\n  render() {\n    return (\n      <GridSub>\n        <Query\n          query={SINGLE_CLIENT_QUERY}\n          variables={{\n            id: this.props.id,\n          }}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>\n            if (error) return <Error error={error} />\n            if (!data.client) return <p>No Client Found for {this.props.id}</p>\n            const client = data.client\n            return (\n              <Query\n                query={ALL_CLIENTS_REMINDERS}\n                variables={{ client: this.props.id }}\n              >\n                {({ data }) => {\n                  if (data.textReminders.length < 1)\n                    return (\n                      <Nothing>\n                        You Haven't Sent {client.firstName} Any Reminders Yet\n                      </Nothing>\n                    )\n                  return (\n                    <Fragment>\n                      <Head>\n                        <title>\n                          Client | {client.firstName} {client.lastName}\n                        </title>\n                      </Head>\n                      <div>\n                        <Lister>\n                          {data.textReminders.map(message => {\n                            return (\n                              <TextChunk key={message.id}>\n                                <div className=\"message-text\">\n                                  {message.text}\n                                </div>\n                                <div className=\"confirmationStatus\">\n                                  {message.confirmationStatus ===\n                                    'UNCONFIRMED' && (\n                                    <PU>{message.confirmationStatus}</PU>\n                                  )}\n                                  {message.confirmationStatus ===\n                                    'CONFIRMED' && (\n                                    <PG>{message.confirmationStatus}</PG>\n                                  )}\n                                  {message.confirmationStatus ===\n                                    'CANCELED' && (\n                                    <PR>{message.confirmationStatus}</PR>\n                                  )}\n                                  {message.updatedAt !== message.createdAt && (\n                                    <P>\n                                      on{' '}\n                                      {format(\n                                        message.updatedAt,\n                                        'MMMM Do, YYYY h:mm a',\n                                      )}\n                                    </P>\n                                  )}\n                                  <P>\n                                    Sent:{' '}\n                                    {format(\n                                      message.createdAt,\n                                      'MMMM Do, YYYY h:mm a',\n                                    )}\n                                  </P>\n                                </div>\n                              </TextChunk>\n                            )\n                          })}\n                        </Lister>\n                      </div>\n                    </Fragment>\n                  )\n                }}\n              </Query>\n            )\n          }}\n        </Query>\n        <div\n          style={{\n            float: 'left',\n            clear: 'both',\n          }}\n          ref={this.myRef}\n        />\n      </GridSub>\n    )\n  }\n}\n\nexport default SingleClient\nexport { SINGLE_CLIENT_QUERY, ALL_CLIENTS_REMINDERS }\n","import React, { Component } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport User from './User'\nimport CartStyles from './styles/CartStyles'\nimport ColumnTally from './ColumnTally'\nimport Supreme from './styles/Supreme'\nimport { startOfDay, format } from 'date-fns'\nimport CloseButton from './styles/CloseButton'\nimport styled from 'styled-components'\nimport CartItem from './CartItem'\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`\n\nconst ConfList = styled.div`\n  display: flex;\n  font-family: 'Montserrat', sans-serif;\n  text-align: center;\n  align-items: center;\n  width: 100%;\n\n  .flexChild {\n    display: block;\n    align-content: center;\n    justify-content: center;\n    width: 100%;\n    color: white;\n  }\n  .scroll {\n    height: 300px;\n    overflow-y: scroll;\n    overscroll-behavior: contain;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      display: none; // Safari and Chrome\n    }\n  }\n  .confirmed {\n    background: rgba(100, 190, 90, 0.9);\n    border-radius: 15px 0 0 15px;\n  }\n  .canceled {\n    background: rgba(200, 80, 90, 0.9);\n  }\n  .unconfirmed {\n    background: grey;\n    border-radius: 0 15px 15px 0;\n  }\n`\n\nclass Slider extends Component {\n  state = {\n    date: startOfDay(new Date()),\n  }\n\n  render() {\n    let { date } = this.state\n    return (\n      <User>\n        {({ data: { me } }) => {\n          if (!me) return null\n          return (\n            <Mutation mutation={TOGGLE_CART_MUTATION}>\n              {toggleCart => (\n                <Query query={LOCAL_STATE_QUERY}>\n                  {({ data }) => (\n                    <CartStyles open={data.cartOpen}>\n                      <header>\n                        <CloseButton\n                          onClick={toggleCart}\n                          title=\"close\"\n                          className=\"exy\"\n                        >\n                          <div className=\"child\">&times;</div>\n                        </CloseButton>\n                        <Supreme>{format(date, 'MMMM Do, YYYY')}</Supreme>\n                        <ConfList>\n                          <div className=\"flexChild\">\n                            <p className=\"confirmed\">Confirmed</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"green\"\n                              name=\"CONFIRMED\"\n                            />\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus ===\n                                  'CONFIRMED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flexChild\">\n                            <p className=\"canceled\">Canceled</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"red\"\n                              name=\"CANCELED\"\n                            />\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus === 'CANCELED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flexChild\">\n                            <p className=\"unconfirmed\">Unconfirmed</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"grey\"\n                              name=\"UNCONFIRMED\"\n                            />\n\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus ===\n                                  'UNCONFIRMED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                        </ConfList>\n                      </header>\n\n                      <footer />\n                    </CartStyles>\n                  )}\n                </Query>\n              )}\n            </Mutation>\n          )\n        }}\n      </User>\n    )\n  }\n}\nexport default Slider\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION }\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Submit = styled.div`\n  display: block;\n  position: fixed;\n  min-width: 300px;\n  width: 30%;\n  transform: translateX(0%);\n  text-align: center;\n  transition: 0.3s;\n  padding: 10px;\n  background: rgba(20, 180, 110, 0.9);\n  color: white;\n  border-radius: 5px;\n  bottom: 15px;\n  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.1),\n    0 6px 10px 5px rgba(0, 0, 0, 0.1), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\n  right: 20px;\n  ${props => props.called && `transform: translateX(0%);`};\n  z-index: 999;\n`\n\nconst Submitted = props => <Submit>{props.message}</Submit>\n\nexport default Submitted\n","import React from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\n\nconst AnimationStyles = styled.span`\n  position: relative;\n  .count {\n    display: block;\n    position: relative;\n    transition: all 0.4s;\n    backface-visibility: hidden;\n  }\n  /* Intial State of the entered Dot */\n  .count-enter {\n    transform: rotateX(0.5turn);\n  }\n  .count-enter-active {\n    transform: rotateX(0);\n  }\n  .count-exit {\n    top: 0;\n    position: absolute;\n    transform: rotateX(0);\n  }\n  .count-exit-active {\n    transform: rotateX(0.5turn);\n  }\n`\n\nconst Dot = styled.span`\n  background: white;\n  display: inline-block;\n  color: black;\n  border-radius: 50%;\n  padding: 0.3rem;\n  line-height: 2rem;\n  min-width: 2.8rem;\n  margin-left: 1rem;\n  font-weight: 100;\n  font-feature-settings: 'tnum';\n  font-variant-numeric: tabular-nums;\n`\n\nconst SuccessCount = ({ count }) => (\n  <AnimationStyles>\n    <TransitionGroup>\n      <CSSTransition\n        unmountOnExit\n        className=\"count\"\n        classNames=\"count\"\n        key={count}\n        timeout={{ enter: 400, exit: 400 }}\n      >\n        <Dot>{count}</Dot>\n      </CSSTransition>\n    </TransitionGroup>\n  </AnimationStyles>\n)\n\nexport default SuccessCount\n","import React from 'react'\nimport Select from 'react-select'\nimport chroma from 'chroma-js'\nimport styled from 'styled-components'\n\nconst colourOptions = [\n  { value: '1', label: '1', color: '#00B8D9' },\n  { value: '2', label: '2', color: '#0052CC' },\n  { value: '3', label: '3', color: '#5243AA' },\n  { value: '4', label: '4', color: '#FF5630' },\n  { value: '5', label: '5', color: '#FF8B00' },\n  { value: '6', label: '6', color: '#FFC400' },\n  { value: '7', label: '7', color: '#36B37E' },\n  { value: '8', label: '8', color: '#00875A' },\n  { value: '9', label: '9', color: '#253858' },\n  { value: '10', label: '10', color: '#666666' },\n  { value: '11', label: '11', color: '#666666' },\n  { value: '12', label: '12', color: '#666666' },\n]\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n})\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n    }\n  },\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n}\nclass Timer extends React.Component {\n  state = {\n    hour: '',\n    minute: '',\n    am: true,\n  }\n\n  handleTime = (hour, minute, am) => {\n    this.setState({ hour, minute, am })\n  }\n  render() {\n    const { hour } = this.state\n\n    return (\n      <Select\n        className=\"color\"\n        styles={colourStyles}\n        value={hour}\n        onChange={this.handleTime}\n        options={colourOptions}\n      />\n    )\n  }\n}\nexport default Timer\n","import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport PropTypes from 'prop-types'\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      firstName\n      lastName\n      cellPhone\n      businessName\n      plan\n      permissions\n      orders {\n        id\n      }\n      appointments {\n        id\n      }\n      cart {\n        id\n        quantity\n        confirmationStatus\n        client {\n          id\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n`\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n)\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n}\n\nexport default User\nexport { CURRENT_USER_QUERY }\n","import styled from 'styled-components'\n\nconst CartStyles = styled.div`\n  padding: 40px;\n  position: relative;\n  background: white;\n  position: fixed;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 40%;\n  min-width: 500px;\n  max-width: 700px;\n  bottom: 0;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  z-index: 90;\n  display: grid;\n  grid-template-rows: 40vh auto;\n  overflow-y: scroll;\n  ${props => props.open && `transform: translateX(0);`};\n  header {\n    margin-bottom: 1rem;\n    padding-bottom: 1rem;\n  }\n  footer {\n    border-top: 5px solid ${props => props.theme.black};\n    margin-top: 2rem;\n    padding-top: 2rem;\n    display: grid;\n    grid-template-columns: 1fr;\n    align-items: center;\n    font-size: 3rem;\n    font-weight: 900;\n    p {\n      margin: 0;\n    }\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .exy {\n    cursor: pointer;\n    opacity: 0.6;\n    outline: none;\n  }\n`\n\nexport default CartStyles\n","import styled from 'styled-components'\n\nconst ClientStyles = styled.div`\n  border: none;\n  border-radius: 25px;\n  margin: 1px 0px;\n  background: white;\n  height: 30px;\n  box-shadow: 0, 0, 4px, 2px rgba(0, 0, 0, 0.1);\n  &:hover {\n    background: rgba(20, 110, 240, 0.4);\n  }\n  img {\n    width: 100%;\n    height: 100px;\n    object-fit: cover;\n  }\n\n  .buttonList {\n    text-align: left;\n    display: grid;\n    width: 100%;\n    align-items: center;\n\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n\n    & > * {\n      /* background: white; */\n    }\n  }\n  p,\n  a {\n    padding-left: 10px;\n    margin: 0;\n  }\n  button {\n    padding: 2px 0;\n    border-radius: 5px;\n    margin: 0 10px;\n    border: none;\n    font-size: 14px;\n    cursor: pointer;\n    &:focus {\n      outline: none;\n    }\n    &:active {\n      outline: none;\n    }\n    &:hover {\n      background: rgba(220, 10, 20, 0.5);\n    }\n  }\n`\n\nexport default ClientStyles\n","import styled from 'styled-components'\n\nconst CloseButton = styled.button`\n  background: transparent;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 30px;\n  padding-bottom: 6px;\n  border: 1px solid red;\n  position: absolute;\n  z-index: 20;\n  left: 5px;\n  top: 5px;\n  .child {\n    position: absolute;\n    justify-self: center;\n    display: flex;\n    color: red;\n    font-size: 3rem;\n    padding-left: 0px;\n  }\n`\n\nexport default CloseButton\n","import styled, { keyframes } from 'styled-components'\n\nconst DropDown = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 5;\n  border: 1px solid ${props => props.theme.lightgrey};\n  max-height: 50vh;\n  overflow-y: scroll;\n`\n\nconst DropDownItem = styled.div`\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\n  background: ${props => (props.highlighted ? '#f7f7f7' : 'white')};\n  padding: 1rem;\n  transition: all 0.2s;\n  ${props => (props.highlighted ? 'padding-left: 2rem;' : null)};\n  display: flex;\n  align-items: center;\n  border-left: 10px solid\n    ${props => (props.highlighted ? props.theme.lightgrey : 'white')};\n  img {\n    margin-right: 10px;\n  }\n`\n\nconst glow = keyframes`\n  from {\n    box-shadow: 0 0 0px yellow;\n  }\n\n  to {\n    box-shadow: 0 0 10px 1px yellow;\n  }\n`\n\nconst SearchStyles = styled.div`\n  position: relative;\n  input {\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    border: 0;\n    border-radius: 5px;\n\n    font-size: 2rem;\n    outline: none;\n    &.loading {\n      animation: ${glow} 0.5s ease-in-out infinite alternate;\n    }\n  }\n`\n\nexport { DropDown, DropDownItem, SearchStyles }\n","import styled from 'styled-components'\n\nconst NavStyles = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-self: end;\n  font-size: 1.5rem;\n  z-index: 0;\n  position: relative;\n  a,\n  button {\n    padding: 0rem 2rem;\n    display: flex;\n    align-items: center;\n    position: relative;\n    text-transform: uppercase;\n    font-weight: 900;\n    font-size: 1em;\n    background: none;\n    border: 0;\n    color: rgba(100, 100, 100, 1);\n    z-index: 5;\n    cursor: pointer;\n\n    &:after {\n      height: 2px;\n      background: ${props => props.theme.blue};\n      content: '';\n      width: 0;\n      position: absolute;\n      transform: translateX(-50%);\n      transition: width 0.4s;\n      transition-timing-function: cubic-bezier(1, -0.65, 0, 2.31);\n      left: 50%;\n      margin-top: 1.3rem;\n    }\n    @media (max-width: 699px) {\n      &:after {\n        height: 0;\n        background: none;\n        content: '';\n        width: 0;\n        position: absolute;\n        transform: none;\n        transition: none;\n        left: 50%;\n        margin-top: 1.3rem;\n      }\n    }\n    &:hover,\n    &:focus {\n      outline: none;\n      &:after {\n        width: calc(100% - 60px);\n      }\n    }\n  }\n  @media (max-width: 1300px) {\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    width: 100%;\n    justify-content: flex-end;\n    font-size: 1.5rem;\n  }\n`\n\nexport default NavStyles\n","import styled from 'styled-components'\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  justify-self: center;\n  font-size: 10px;\n  width: 340px;\n  /* margin: 2rem 0; */\n  border: 1px solid ${props => props.theme.lightblue};\n  border-radius: 0 0 0 0;\n  background: ${props => props.theme.lightblue};\n  & > * {\n    margin: 0 auto;\n    padding: 5px 14px;\n\n    &:last-child {\n      border-right: 0;\n    }\n    &:nth-child(2) {\n      border-right: 0;\n    }\n  }\n  a {\n    color: white;\n  }\n  a[aria-disabled='true'] {\n    color: ${props => props.theme.lightgrey};\n    pointer-events: none;\n  }\n  .totes {\n    background: white;\n  }\n`\n\nexport default PaginationStyles\n","import styled from 'styled-components'\n\nconst Supreme = styled.p`\n  border: 2px solid ${props => props.theme.blue};\n  border-radius: 5px;\n  font-family: 'Montserrat', sans-serif;\n  color: ${props => props.theme.blue};\n  display: block;\n  text-align: center;\n  padding: 0px 0px;\n  margin: 0 auto;\n  font-size: 2.2rem;\n`\n\nexport default Supreme\n","// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444`\nexport const perPage = 19\n","import withApollo from 'next-with-apollo'\nimport ApolloClient from 'apollo-boost'\nimport { endpoint } from '../config'\nimport { LOCAL_STATE_QUERY } from '../components/Slider'\nimport { OPEN_MODAL_QUERY } from '../components/Modal'\nimport { LOCAL_FLASH_QUERY } from '../components/ReviewMessage'\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      })\n    },\n    //local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            })\n            const data = {\n              data: { cartOpen: !cartOpen },\n            }\n            cache.writeData(data)\n            return data\n          },\n          toggleModal(_, variables, { cache }) {\n            const { openModal } = cache.readQuery({\n              query: OPEN_MODAL_QUERY,\n            })\n            const data = {\n              data: { openModal: !openModal },\n            }\n            cache.writeData(data)\n            return data\n          },\n        },\n      },\n      defaults: {\n        cartOpen: false,\n        openModal: false,\n        flashOpen: false,\n      },\n    },\n  })\n}\n\nexport default withApollo(createClient)\n","import App, { Container } from 'next/app';\nimport Page from '../components/Page';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nclass MyApp extends App {\n\tstatic async getInitialProps({ Component, ctx }) {\n\t\tlet pageProps = {};\n\t\tif (Component.getInitialProps) {\n\t\t\tpageProps = await Component.getInitialProps(ctx);\n\t\t}\n\n\t\tpageProps.query = ctx.query;\n\t\treturn { pageProps };\n\t}\n\trender() {\n\t\tconst { Component, apollo, pageProps } = this.props;\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<ApolloProvider client={apollo}>\n\t\t\t\t\t<Page>\n\t\t\t\t\t\t<Component {...pageProps} />\n\t\t\t\t\t</Page>\n\t\t\t\t</ApolloProvider>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withData(MyApp);","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"chroma-js\");","module.exports = require(\"date-fns\");","module.exports = require(\"downshift\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"lodash.debounce\");","module.exports = require(\"next-with-apollo\");","module.exports = require(\"next/app\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"nprogress\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-select\");","module.exports = require(\"react-svg-buttons\");","module.exports = require(\"react-transition-group\");","module.exports = require(\"styled-components\");"],"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","sourceRoot":""}