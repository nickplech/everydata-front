{"version":3,"file":"static/development/pages/inbox.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ErrorMessage.js","webpack:///./components/InboxComponent.js","webpack:///./components/Pagination.js","webpack:///./components/PleaseSignIn.js","webpack:///./components/SignIn.js","webpack:///./components/User.js","webpack:///./components/styles/Form.js","webpack:///./components/styles/PaginationStyles.js","webpack:///./components/styles/SickButton.js","webpack:///./config.js","webpack:///./pages/inbox.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"date-fns\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-pose\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import styled from 'styled-components'\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: rgba(250, 0, 0, 0.5);\n  margin: 2rem 0;\n  border-left: 5px solid rgba(220, 0, 0, 0.7);\n\n  p {\n    margin: 0;\n    font-weight: 100;\n    color: white;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null\n  if (\n    error.networkError &&\n    error.networkError.result &&\n    error.networkError.result.errors.length\n  ) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Oops...</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ))\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Oops...</strong>\n        {error.message\n          .replace('GraphQL error: ', '')\n          .replace(\n            'A unique constraint would be violated on User. Details: Field name = cellPhone',\n            'This phone number is already in use! Please enter a new cellphone number',\n          )}\n      </p>\n    </ErrorStyles>\n  )\n}\n\nDisplayError.defaultProps = {\n  error: {},\n}\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n}\n\nexport default DisplayError\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { ApolloConsumer } from 'react-apollo'\nimport { format, distanceInWordsToNow } from 'date-fns'\nimport { PAGINATION_QUERY } from './Pagination'\nimport posed from 'react-pose'\nimport Pagination from './Pagination'\nimport { perPage } from '../config'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst Container = posed.ul({\n  notShut: {\n    delayChildren: 200,\n    staggerChildren: 60,\n  },\n  shut: { delay: 300 },\n  initialPose: 'shut',\n})\nconst P = posed.li({\n  notShut: { y: 0, opacity: 1 },\n  shut: { y: 20, opacity: 0 },\n})\n\nconst Content = posed.div({\n  closed: { height: 0 },\n  open: { height: 'auto' },\n})\nconst INBOX_QUERY_NEW = gql`\n  query INBOX_QUERY_NEW($seen: Boolean) {\n    clients(where: { seen: $seen }, orderBy: createdAt_DESC) {\n      id\n      fullName\n      firstName\n      lastName\n      businessName\n      cellPhone\n      email\n      seen\n      handled\n      createdAt\n      updatedAt\n    }\n  }\n`\nconst INBOX_QUERY_CLOSED = gql`\n  query INBOX_QUERY_CLOSED($handled: Boolean) {\n    clients(where: { handled: $handled }, orderBy: createdAt_DESC) {\n      id\n      fullName\n      cellPhone\n      firstName\n      lastName\n      businessName\n      email\n      seen\n      handled\n      createdAt\n      updatedAt\n    }\n  }\n`\nconst INBOX_QUERY_OPEN = gql`\n  query INBOX_QUERY_OPEN($handled: Boolean) {\n    clients(where: { handled: $handled }, orderBy: createdAt_DESC) {\n      id\n      fullName\n      firstName\n      lastName\n      businessName\n      cellPhone\n      email\n      seen\n      handled\n      createdAt\n      updatedAt\n    }\n  }\n`\n\nconst OPEN_TOTAL_QUERY = gql`\n  query OPEN_TOTAL_QUERY($handled: Boolean) {\n    clientsConnection(where: { handled: $handled }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`\nconst CLOSED_TOTAL_QUERY = gql`\n  query CLOSED_TOTAL_QUERY($handled: Boolean) {\n    clientsConnection(where: { handled: $handled }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`\nconst NEW_TOTAL_QUERY = gql`\n  query NEW_TOTAL_QUERY($seen: Boolean) {\n    clientsConnection(where: { seen: $seen }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`\nconst INBOX_QUERY_TOTAL = gql`\n  query INBOX_QUERY_TOTAL {\n    clients(orderBy: createdAt_DESC) {\n      id\n      fullName\n      firstName\n      lastName\n      businessName\n      cellPhone\n      email\n      seen\n      handled\n      createdAt\n      updatedAt\n    }\n  }\n`\nconst UPDATE_SEEN_MUTATION = gql`\n  mutation UPDATE_SEEN_MUTATION($id: ID!, $seen: Boolean) {\n    updateClient(id: $id, seen: $seen) {\n      id\n      seen\n    }\n  }\n`\n\nconst StatsDisplay = styled.div`\n  position: relative;\n  grid-column: 1;\n  grid-row: 1;\n  background: white;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px 5px 5px 5px;\n  box-shadow: 1px 1px 2px 3px rgba(0, 0, 0, 0.05);\n  z-index: 10;\n  h3 {\n    border-radius: 5px 5px 0px 0px;\n  }\n  .parent {\n    display: flex;\n    flex-flow: column;\n    position: relative;\n    right: 0px;\n    align-items: flex-start;\n    border-radius: 15px 15px 0 0;\n    text-align: center;\n    padding-left: 20px;\n    margin-top: 1px;\n    height: 65px;\n    width: 100%;\n    background: #3d5866;\n  }\n  .sideDate {\n    display: flex;\n    color: white;\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 26px;\n    line-height: 26px;\n    padding-top: 10px;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n  }\n  .date {\n    display: flex;\n    text-transform: uppercase;\n    margin: 0;\n    color: rgba(230, 230, 230, 0.8);\n    font-size: 14px;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n  }\n`\nconst DateLine = styled.div`\n  font-family: 'Montserrat', sans-serif;\n  font-size: 15px;\n  line-height: 16px;\n  position: relative;\n  .ago {\n    font-size: 11px;\n  }\n`\nconst Name = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 280px;\n  padding-left: 20px;\n  h4 {\n    margin: 0;\n  }\n`\nconst Info = styled.a`\n  font-family: 'Montserrat', sans-serif;\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 40px;\n  justify-items: flex-start;\n  color: rgba(20, 20, 20, 0.4);\n  margin: 0px 0;\n  transition: 0.2s;\n  padding: 10px 10px 10px 10px;\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(20, 110, 220, 0.2);\n  width: 100%;\n  text-transform: uppercase;\n  font-size: 18px;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    padding-left: 15px;\n  }\n  &:active {\n    color: blue;\n  }\n`\nconst Number = styled.div`\n  display: flex;\n  font-weight: 700;\n  padding-left: 10px;\n  float: right;\n`\nconst CalendarLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 1fr;\n  height: calc(100vh - 100px);\n  width: 99%;\n  position: absolute;\n  padding-left: 10px;\n  padding-right: 10px;\n  /* right: 10px; */\nmargin: 0 auto;\n  top: 85px;\n  grid-column-gap: 8px;\n  grid-row-gap: 8px;\n  bottom: 0;\n  z-index: -1;\n`\nconst Nothing = styled.h2`\n  display: block;\n  font-size: 20px;\n  margin-top: 125px;\n  opacity: 0.4;\n  text-align: center;\n`\nconst StyledSubStatus = styled.div`\n  display: grid;\n  grid-column: 2;\n  background: rgba(200, 200, 200, 0.1);\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  margin: 0 auto;\n  border-radius: 5px 5px 5px 5px;\n  z-index: -1;\n  padding: 10px 10px 10px 30px;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  overflow: scroll;\n  overscroll-behavior: contain;\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n`\nconst ClientPill = styled.div`\n  padding: 10px 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 600px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  min-height: 50px;\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: 0.4s;\n  &:hover {\n    background: rgba(10, 110, 220, 0.3);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  h5 {\n    font-size: 16px;\n    margin: 5px;\n    font-weight: 400;\n    font-family: 'Montserrat', sans-serif;\n  }\n  span {\n    font-weight: 600;\n  }\n  .content {\n    overflow: hidden;\n    font-size: 18px;\n    border-radius: 5px;\n    background: rgba(240, 240, 240, 1);\n    color: black;\n    min-width: 330px;\n    width: 100%;\n    margin-bottom: 0px;\n  }\n  .content-wrapper {\n    padding: 20px 10px;\n  }\n`\nclass InboxComponent extends Component {\n  state = {\n    clients: [],\n    seen: '',\n    open: false,\n    inbox: '',\n    isOpen: false,\n    loading: false,\n  }\n\n  // componentDidMount() {\n  //   setTimeout(this.toggle, 1000)\n  // }\n\n  toggle = () => this.setState({ isOpen: true })\n\n  saveToState = async (e, client) => {\n    console.log('Searching...')\n    await this.setState({ isOpen: false, clients: [], loading: true })\n    const res = await client.query({\n      query: INBOX_QUERY_TOTAL,\n    })\n\n    await this.setState({\n      loading: false,\n      clients: res.data.clients,\n      inbox: 'total',\n    })\n    await this.toggle()\n  }\n  saveToState2 = async (e, client) => {\n    console.log('Searching...')\n    await this.setState({ isOpen: false, clients: [], loading: true })\n    const res = await client.query({\n      query: INBOX_QUERY_NEW,\n      variables: {\n        seen: false,\n      },\n    })\n\n    await this.setState({\n      loading: false,\n      clients: res.data.clients,\n      inbox: 'new',\n    })\n\n    await this.toggle()\n  }\n  saveToState3 = async (e, client) => {\n    console.log('Searching...')\n    await this.setState({ isOpen: false, clients: [], loading: true })\n\n    const res = await client.query({\n      query: INBOX_QUERY_OPEN,\n      variables: {\n        handled: false,\n      },\n    })\n\n    await this.setState({\n      loading: false,\n      clients: res.data.clients,\n      inbox: 'open',\n    })\n\n    await this.toggle()\n  }\n  saveToState4 = async (e, client) => {\n    console.log('Searching...')\n    await this.setState({ isOpen: false, clients: [], loading: true })\n\n    const res = await client.query({\n      query: INBOX_QUERY_CLOSED,\n      variables: {\n        handled: true,\n      },\n    })\n\n    await this.setState({\n      loading: false,\n      clients: res.data.clients,\n      inbox: 'closed',\n    })\n    await this.toggle()\n  }\n\n  updateClient = async (id, i, updateClientMutation) => {\n    this.setState({ open: open === i ? false : i })\n    await this.setState({\n      seen: id,\n    })\n    console.log(this.state.seen)\n\n    const res = await updateClientMutation({\n      variables: {\n        id: this.state.seen,\n        seen: true,\n      },\n    })\n    console.log(res)\n  }\n  render() {\n    const { isOpen } = this.state\n    const { open } = this.state\n    return (\n      <CalendarLayout>\n        <StatsDisplay>\n          <h3\n            style={{\n              color: 'white',\n              margin: 0,\n              background: 'rgba(20,110,240,1)',\n              textTransform: 'uppercase',\n            }}\n          >\n            Inbox\n          </h3>\n          <ApolloConsumer>\n            {client => (\n              <>\n                <Query query={NEW_TOTAL_QUERY} variables={{ seen: false }}>\n                  {({ data: { clientsConnection }, loading }) => {\n                    if (loading) return <p>loading...</p>\n                    if (!clientsConnection) return null\n                    return (\n                      <Info\n                        value={this.state.inbox}\n                        onClick={e => this.saveToState2(e, client)}\n                      >\n                        New{' '}\n                        <Number>\n                          {clientsConnection.aggregate.count &&\n                            clientsConnection.aggregate.count}\n                        </Number>\n                      </Info>\n                    )\n                  }}\n                </Query>{' '}\n                <Info\n                  value={this.state.inbox}\n                  onClick={e => this.saveToState(e, client)}\n                >\n                  Total Leads\n                  <Query query={PAGINATION_QUERY}>\n                    {({ data, loading, error }) => {\n                      if (loading) return <p>Loading...</p>\n                      const count = data.clientsConnection.aggregate.count\n\n                      return <Number>{count && count}</Number>\n                    }}\n                  </Query>{' '}\n                </Info>{' '}\n                <Query query={OPEN_TOTAL_QUERY} variables={{ handled: false }}>\n                  {({ data: { clientsConnection }, loading }) => {\n                    if (loading) return <p>loading...</p>\n                    if (!clientsConnection) return null\n                    return (\n                      <Info\n                        value={this.state.inbox}\n                        onClick={e => this.saveToState3(e, client)}\n                      >\n                        Open\n                        <Number>\n                          {clientsConnection.aggregate.count &&\n                            clientsConnection.aggregate.count}\n                        </Number>\n                      </Info>\n                    )\n                  }}\n                </Query>\n                <Query query={CLOSED_TOTAL_QUERY} variables={{ handled: true }}>\n                  {({ data: { clientsConnection }, loading }) => {\n                    if (loading) return <p>loading...</p>\n                    if (!clientsConnection) return null\n                    return (\n                      <Info\n                        value={this.state.inbox}\n                        onClick={e => this.saveToState4(e, client)}\n                      >\n                        <div> Closed</div>\n                        <Number>\n                          {clientsConnection.aggregate.count &&\n                            clientsConnection.aggregate.count}\n                        </Number>\n                      </Info>\n                    )\n                  }}\n                </Query>\n              </>\n            )}\n          </ApolloConsumer>\n        </StatsDisplay>\n        <Mutation\n          mutation={UPDATE_SEEN_MUTATION}\n          variables={{ seen: true, id: this.state.seen }}\n          refetchQueries={[\n            {\n              query: NEW_TOTAL_QUERY,\n              variables: { seen: false },\n            },\n            {\n              query: INBOX_QUERY_NEW,\n              variables: { seen: false },\n            },\n          ]}\n        >\n          {(updateClient, { loading, error }) => {\n            if (loading) return <p>loading...</p>\n            if (this.state.loading)\n              return (\n                <Nothing>\n                  <p>loading...</p>\n                </Nothing>\n              )\n            if (this.state.clients.length < 1)\n              return this.state.inbox ? (\n                <StyledSubStatus>\n                  <Nothing>\n                    There are currently no {this.state.inbox} submissions\n                  </Nothing>\n                </StyledSubStatus>\n              ) : (\n                <StyledSubStatus />\n              )\n            return (\n              <StyledSubStatus>\n                <Container pose={isOpen ? 'notShut' : 'shut'}>\n                  {this.state.clients.map((client, i) => {\n                    const { id } = client\n\n                    if (client.seen === true)\n                      return (\n                        <P key={id}>\n                          <ClientPill\n                            onClick={() =>\n                              this.setState({\n                                open: open === i ? false : i,\n                              })\n                            }\n                          >\n                            <Name>\n                              <h4>{client.fullName}</h4>\n                              <DateLine>\n                                {distanceInWordsToNow(client.createdAt, {\n                                  addSuffix: true,\n                                })}\n                                <div className=\"ago\">\n                                  {format(\n                                    client.createdAt,\n                                    'dddd MMMM Do, YYYY ',\n                                  )}\n                                </div>\n                              </DateLine>\n                            </Name>\n                            <Content\n                              className=\"content\"\n                              pose={open === i ? 'open' : 'closed'}\n                            >\n                              <div className=\"content-wrapper\">\n                                <h5><span>First Name:</span> {client.firstName}</h5>\n                                <h5> <span>Last Name:</span>  {client.lastName}</h5>\n                                <h5> <span>Business:</span>  {client.businessName}</h5>\n                                <h5> <span>Phone:</span>  {client.cellPhone}</h5>\n                                <h5> <span>Email:</span>  {client.email}</h5>\n                                <h5>\n                                  <span> Submitted:</span> {' '}\n                                  {format(client.createdAt, 'MMM Do, YYYY')} at{' '}\n                                  {format(client.createdAt, 'h:mm a')}\n                                </h5>\n                              </div>\n                            </Content>\n                          </ClientPill>\n                        </P>\n                      )\n\n                    return (\n                      <P key={id}>\n                        <ClientPill\n                          style={{\n                            background: 'rgba(20,220,110,.4',\n                          }}\n                          onClick={() => this.updateClient(id, i, updateClient)}\n                        >\n                          {' '}\n                          <Name>\n                            <h4>{client.fullName}</h4>\n                            <DateLine>\n                              {distanceInWordsToNow(client.createdAt, {\n                                addSuffix: true,\n                              })}\n                              <div className=\"ago\">\n                                {format(\n                                  client.createdAt,\n                                  'dddd MMMM Do, YYYY ',\n                                )}\n                              </div>\n                            </DateLine>\n                          </Name>\n                          <Content\n                            className=\"content\"\n                            pose={open === i ? 'open' : 'closed'}\n                          >\n                            <div className=\"content-wrapper\">\n                                <h5><span>First Name:</span> {client.firstName}</h5>\n                                <h5> <span>Last Name:</span>  {client.lastName}</h5>\n                                <h5> <span>Business:</span>  {client.businessName}</h5>\n                                <h5> <span>Phone:</span>  {client.cellPhone}</h5>\n                                <h5> <span>Email:</span>  {client.email}</h5>\n                                <h5>\n                                  <span> Submitted:</span> {' '}\n                                {format(client.createdAt, 'MMM Do, YYYY')} at{' '}\n                                {format(client.createdAt, 'h:mm a')}\n                              </h5>\n                            </div>\n                          </Content>\n                        </ClientPill>\n                      </P>\n                    )\n                  })}\n                </Container>\n\n                {/*\n                <Pagination\n                  saveToState={this.saveToState}\n                  page={this.props.page}\n                /> */}\n              </StyledSubStatus>\n            )\n          }}\n        </Mutation>\n      </CalendarLayout>\n    )\n  }\n}\n\nexport default InboxComponent\nexport {\n  INBOX_QUERY_TOTAL,\n  INBOX_QUERY_OPEN,\n  INBOX_QUERY_CLOSED,\n  INBOX_QUERY_NEW,\n}\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport Link from 'next/link'\nimport PaginationStyles from './styles/PaginationStyles'\nimport { INBOX_QUERY_TOTAL } from './InboxComponent'\nimport { perPage } from '../config'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    clientsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`\nconst Pagination = props => (\n  <Query\n    query={PAGINATION_QUERY}\n    refetchQueries={[\n      {\n        query: INBOX_QUERY_TOTAL,\n        variables: { skip: props.page * perPage - perPage, first: 5 },\n      },\n    ]}\n  >\n    {({ data, loading, error }) => {\n      if (loading) return <p>Loading...</p>\n      const count = data.clientsConnection.aggregate.count\n      const pages = Math.ceil(count / perPage)\n      const page = props.page\n      return (\n        <PaginationStyles>\n          <Link\n            prefetch\n            href={{ pathname: 'inbox', query: { page: page - 1 } }}\n          >\n            <a className=\"prev\" aria-disabled={page <= 1}>\n              ← Prev\n            </a>\n          </Link>\n          <p className=\"totes\">\n            Page {props.page} of <span className=\"totalPages\">{pages}</span>\n          </p>\n          {/* <p className=\"totes\">Total: {count}</p> */}\n          <Link\n            prefetch\n            href={{ pathname: 'inbox', query: { page: page + 1 } }}\n          >\n            <a className=\"next\" aria-disabled={page >= pages}>\n              Next →\n            </a>\n          </Link>\n        </PaginationStyles>\n      )\n    }}\n  </Query>\n)\n\nexport default Pagination\nexport { PAGINATION_QUERY }\n","import { Query } from 'react-apollo'\nimport { CURRENT_USER_QUERY } from './User'\nimport SignIn from './SignIn'\nimport styled from 'styled-components'\n\nconst Paragraph = styled.p`\n  padding-left: 20px;\n`\nconst PleaseSignIn = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({ data, loading }) => {\n      if (loading) return <p>Loading...</p>\n      if (!data.me) {\n        return (\n          <>\n            <SignIn />\n          </>\n        )\n      }\n      return props.children\n    }}\n  </Query>\n)\n\nexport default PleaseSignIn\n","import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\nimport { CURRENT_USER_QUERY } from './User'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport SickButton from './styles/SickButton'\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      businessName\n      email\n    }\n  }\n`\nconst Margin = styled.div`\n  margin: 15px 25px;\n`\n\nconst StyledP = styled.p`\n  margin-bottom: 0;\n  margin-top: 20px;\n  cursor: pointer;\n`\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Margin>\n        <Mutation\n          mutation={SIGNIN_MUTATION}\n          variables={this.state}\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n        >\n          {(signin, { error, loading }) => {\n            return (\n              <>\n                <Form\n                  method=\"post\"\n                  onSubmit={async e => {\n                    e.preventDefault()\n                    await signin()\n                    this.setState({\n                      email: '',\n                      password: '',\n                    })\n                  }}\n                >\n                  <fieldset disabled={loading} aria-busy={loading}>\n                    <h2>Admin Login</h2>\n                    <Error error={error} />\n                    <label htmlFor=\"email\">\n                      Email\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        value={this.state.email}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n\n                    <label htmlFor=\"password\">\n                      Password\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n\n                    <SickButton type=\"submit\">Sign In</SickButton>\n                  </fieldset>\n                </Form>\n              </>\n            )\n          }}\n        </Mutation>\n      </Margin>\n    )\n  }\n}\n\nexport default SignIn\nexport { SIGNIN_MUTATION }\n","import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport PropTypes from 'prop-types'\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      firstName\n      lastName\n      cellPhone\n      businessName\n      permissions\n    }\n  }\n`\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n)\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n}\n\nexport default User\nexport { CURRENT_USER_QUERY }\n","import styled, { keyframes } from 'styled-components'\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`\n\nconst Form = styled.form`\n  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.1),\n    0 6px 10px 5px rgba(0, 0, 0, 0.1), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\n  background: white;\n  z-index: 999;\n  padding: 20px;\n  margin: 20px 0;\n  margin-top: 0px;\n  font-size: 1.5rem;\n  line-height: 1.5;\n  font-weight: 600;\n  position: relative;\n\n  label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding-left: 1rem;\n    padding-top: 0.7rem;\n    padding-bottom: 0.7rem;\n    font-size: 1.5rem;\n    border-radius: 5px;\n\n    background: transparent;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    margin-top: 0.8rem;\n    &:focus {\n      outline: 0;\n      border: 2px solid rgba(20, 110, 220, 0.5);\n    }\n  }\n\n  button,\n  input[type='submit'] {\n    width: auto;\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 600;\n    padding: 0.5rem 1.2rem;\n    margin-top: 1rem;\n  }\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n    &::before {\n      height: 10px;\n      margin-bottom: 10px;\n      content: '';\n      display: block;\n      background-image: linear-gradient(\n        to right,\n        #272ebd 0%,\n        #0980cd 50%,\n        #272ebd 100%\n      );\n    }\n    &[aria-busy='true']::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`\n\nForm.displayName = 'Form'\n\nexport default Form\n","import styled from 'styled-components'\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(3, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  height: 50px;\n  justify-self: center;\n  font-size: 10px;\n  width: 250px;\n  /* margin: 2rem 0; */\n  border: 1px solid ${props => props.theme.lightblue};\n  border-radius: 25px 25px 25px 25px;\n  background: ${props => props.theme.lightblue};\n  & > * {\n    margin: 0 auto;\n    padding: 12px 14px;\n\n    &:last-child {\n      border-right: 0;\n    }\n    &:nth-child(2) {\n      border-right: 0;\n    }\n  }\n  a {\n    color: white;\n  }\n  a[aria-disabled='true'] {\n    color: ${props => props.theme.lightgrey};\n    pointer-events: none;\n  }\n  .totes {\n    background: white;\n  }\n`\n\nexport default PaginationStyles\n","import styled from 'styled-components'\n\nconst SickButton = styled.button`\n  background: rgba(30, 110, 240, 1);\n  color: white;\n  font-weight: 800;\n  border: 0;\n  margin: 0 auto;\n  border-radius: 5px;\n\n  font-size: 2rem;\n  padding: 0.5rem 1.2rem;\n  font-size: 1.8rem;\n  display: inline-block;\n  transition: all 0.5s;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.2);\n  &[disabled] {\n    opacity: 0.5;\n  }\n  &:hover {\n    background: rgba(30, 110, 240, 0.9);\n  }\n  &:active {\n    box-shadow: none;\n  }\n`\n\nexport default SickButton\n","// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444`\nexport const perPage = 5\nexport const postsPerPage = 10\n","import React from 'react'\nimport InboxComponent from '../components/InboxComponent'\nimport PleaseSignIn from '../components/PleaseSignIn'\n\nconst Inbox = props => {\n  return (\n    <PleaseSignIn>\n      <InboxComponent\n        id={props.query.id}\n        page={parseFloat(props.query.page) || 1}\n      />\n    </PleaseSignIn>\n  )\n}\n\nexport default Inbox\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"date-fns\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-pose\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAiBA;AAiBA;AAkBA;AASA;AASA;AASA;AAiBA;AASA;AAAA;AAAA;AAAA;A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","sourceRoot":""}