{"version":3,"file":"static/webpack/static/development/pages/client.js.78b19b36ab47355b99c4.hot-update.js","sources":["webpack:///./components/Timer.js"],"sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport chroma from 'chroma-js'\nimport styled from 'styled-components'\n\nconst colourOptions = [\n  { value: '1', label: '1', color: '#00B8D9' },\n  { value: '2', label: '2', color: '#0052CC' },\n  { value: '3', label: '3', color: '#5243AA' },\n  { value: '4', label: '4', color: '#FF5630' },\n  { value: '5', label: '5', color: '#FF8B00' },\n  { value: '6', label: '6', color: '#FFC400' },\n  { value: '7', label: '7', color: '#36B37E' },\n  { value: '8', label: '8', color: '#00875A' },\n  { value: '9', label: '9', color: '#253858' },\n  { value: '10', label: '10', color: '#666666' },\n  { value: '11', label: '11', color: '#666666' },\n  { value: '12', label: '12', color: '#666666' },\n]\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n})\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n    }\n  },\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n}\nclass Timer extends React.Component {\n  state = {\n    hour: '8',\n    minute: '00',\n    am: true,\n  }\n\n  handleTime = (hour, minute, am) => {\n    this.setState({ hour, minute, am })\n  }\n  render() {\n    const { hour } = this.state\n\n    return (\n      <Select\n        className=\"color\"\n        styles={colourStyles}\n        value={hour}\n        onChange={this.handleTime}\n        options={colourOptions}\n      />\n    )\n  }\n}\nexport default Timer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAOA;AATA;AAiBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAxBA;AACA;AAyBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAtBA;AACA;AAuBA;;;;A","sourceRoot":""}