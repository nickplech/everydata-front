{"version":3,"file":"static/webpack/static/development/pages/_app.js.5c4e9ad25848d9f9dfb6.hot-update.js","sources":["webpack:///./components/Slider.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport User from './User'\nimport CartStyles from './styles/CartStyles'\nimport ColumnTally from './ColumnTally'\nimport Supreme from './styles/Supreme'\nimport { startOfDay, format } from 'date-fns'\nimport styled from 'styled-components'\nimport CartItem from './CartItem'\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`\nconst CloseButton = styled.button`\n  background: transparent;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 30px;\n  padding-bottom: 6px;\n  border: 1px solid red;\n  position: absolute;\n  z-index: 20;\n  left: 5px;\n  top: 5px;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  .child {\n    position: absolute;\n    justify-self: center;\n    display: flex;\n    color: red;\n    font-size: 3rem;\n    padding-left: 0px;\n  }\n`\n\nconst ConfList = styled.div`\n  display: flex;\n  font-family: 'Montserrat', sans-serif;\n  text-align: center;\n  align-items: center;\n  width: 100%;\n\n  .flexChild {\n    display: block;\n    align-content: center;\n    justify-content: center;\n    width: 100%;\n    color: white;\n  }\n  .scroll {\n    height: 300px;\n    overflow-y: scroll;\n    overscroll-behavior: contain;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      display: none; // Safari and Chrome\n    }\n  }\n  .confirmed {\n    background: rgba(100, 190, 90, 0.9);\n    border-radius: 15px 0 0 15px;\n  }\n  .canceled {\n    background: rgba(200, 80, 90, 0.9);\n  }\n  .unconfirmed {\n    background: grey;\n    border-radius: 0 15px 15px 0;\n  }\n`\n\nclass Slider extends Component {\n  state = {\n    date: startOfDay(new Date()),\n  }\n\n  render() {\n    let { date } = this.state\n    return (\n      <User>\n        {({ data: { me } }) => {\n          if (!me) return null\n          return (\n            <Mutation mutation={TOGGLE_CART_MUTATION}>\n              {toggleCart => (\n                <Query query={LOCAL_STATE_QUERY}>\n                  {({ data }) => (\n                    <CartStyles open={data.cartOpen}>\n                      <header>\n                        <CloseButton onClick={toggleCart} title=\"close\">\n                          <div className=\"child\">&times;</div>\n                        </CloseButton>\n                        <Supreme>{format(date, 'MMMM Do, YYYY')}</Supreme>\n                        <ConfList>\n                          <div className=\"flexChild\">\n                            <p className=\"confirmed\">Confirmed</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"green\"\n                              name=\"CONFIRMED\"\n                            />\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus ===\n                                  'CONFIRMED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flexChild\">\n                            <p className=\"canceled\">Canceled</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"red\"\n                              name=\"CANCELED\"\n                            />\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus === 'CANCELED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flexChild\">\n                            <p className=\"unconfirmed\">Unconfirmed</p>\n                            <ColumnTally\n                              cart={me.cart}\n                              color=\"grey\"\n                              name=\"UNCONFIRMED\"\n                            />\n\n                            <div className=\"scroll\">\n                              <ul>\n                                {me.cart.map(cartItem =>\n                                  cartItem.confirmationStatus ===\n                                  'UNCONFIRMED' ? (\n                                    <CartItem\n                                      key={cartItem.id}\n                                      cartItem={cartItem}\n                                    />\n                                  ) : null,\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                        </ConfList>\n                      </header>\n\n                      <footer />\n                    </CartStyles>\n                  )}\n                </Query>\n              )}\n            </Mutation>\n          )\n        }}\n      </User>\n    )\n  }\n}\nexport default Slider\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAKA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AACA;AAmCA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1EA;AAFA;AAmFA;AAGA;;;;AAnGA;AACA;AAoGA;;;;;A","sourceRoot":""}