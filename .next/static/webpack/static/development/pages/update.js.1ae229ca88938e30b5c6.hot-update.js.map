{"version":3,"file":"static/webpack/static/development/pages/update.js.1ae229ca88938e30b5c6.hot-update.js","sources":["webpack:///./components/UpdateClient.js","webpack:///./components/styles/SickerButton.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport Form from './styles/Form'\nimport Router from 'next/router'\nimport MaskedInput from 'react-text-mask'\nimport gql from 'graphql-tag'\nimport styled, { ThemeProvider } from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\nimport SickerButton from './styles/SickerButton'\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem;\n  .dates {\n    font-family: montserrat, sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\n\nconst SINGLE_CLIENT_QUERY = gql`\n  query SINGLE_CLIENT_QUERY($id: ID!) {\n    client(where: { id: $id }) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n    }\n  }\n`\n\nconst UPDATE_CLIENT_MUTATION = gql`\n  mutation UPDATE_CLIENT_MUTATION(\n    $id: ID!\n    $firstName: String\n    $lastName: String\n    $cellPhone: String\n    $birthDay: DateTime\n  ) {\n    updateClient(\n      id: $id\n      firstName: $firstName\n      lastName: $lastName\n      cellPhone: $cellPhone\n      birthDay: $birthDay\n    ) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n    }\n  }\n`\n\nclass UpdateClient extends Component {\n  state = {}\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  updateClient = async (e, updateClientMutation) => {\n    e.preventDefault()\n    console.log('Updating Client!')\n    console.log(this.state)\n    const res = await updateClientMutation({\n      variables: {\n        id: this.props.id,\n        ...this.state,\n      },\n    })\n    Router.push({\n      pathname: '/client',\n      query: { id: res.data.updateClient.id },\n    })\n  }\n\n  render() {\n    return (\n      <Inner>\n        <Query\n          query={SINGLE_CLIENT_QUERY}\n          variables={{\n            id: this.props.id,\n          }}\n        >\n          {({ data, loading }) => {\n            if (loading) return <p>Loading...</p>\n            if (!data.client)\n              return <p>No Client Found for ID {this.props.id}</p>\n            return (\n              <Mutation\n                mutation={UPDATE_CLIENT_MUTATION}\n                variables={this.state}\n              >\n                {(updateClient, { loading, error }) => (\n                  <Form onSubmit={e => this.updateClient(e, updateClient)}>\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <label htmlFor=\"firstName\">\n                        First Name\n                        <input\n                          type=\"text\"\n                          id=\"firstName\"\n                          name=\"firstName\"\n                          placeholder=\"First Name\"\n                          required\n                          defaultValue={data.client.firstName}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <label htmlFor=\"lastName\">\n                        Last Name\n                        <input\n                          type=\"text\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          placeholder=\"Last Name\"\n                          required\n                          defaultValue={data.client.lastName}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <label htmlFor=\"cellPhone\">\n                        Cell Phone\n                        <MaskedInput\n                          mask={[\n                            '(',\n                            /[1-9]/,\n                            /\\d/,\n                            /\\d/,\n                            ')',\n                            ' ',\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            '-',\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                          ]}\n                          type=\"text\"\n                          id=\"cellPhone\"\n                          name=\"cellPhone\"\n                          placeholder=\"Phone Number\"\n                          required\n                          defaultValue={data.client.cellPhone}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <label htmlFor=\"birthDay\">\n                        Birthday\n                        <input\n                          className=\"dates\"\n                          type=\"date\"\n                          id=\"birthDay\"\n                          name=\"birthDay\"\n                          autoComplete=\"off\"\n                          defaultValue={data.client.birthDay}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n\n                      <SickButton type=\"submit\">\n                        Sav{loading ? 'ing' : 'e'} Changes\n                      </SickButton>\n                      <SickerButton>Cancel</SickerButton>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            )\n          }}\n        </Query>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateClient\nexport { UPDATE_CLIENT_MUTATION }\n","import styled from 'styled-components'\n\nconst SickButtoner = styled.button`\n  background: rgba(30, 110, 240, 1);\n  color: white;\n  font-weight: 800;\n  border: 0;\n  margin: 10px auto;\n  border-radius: 5px;\n\n  font-size: 2rem;\n  padding: 0.5rem 1.2rem;\n  font-size: 1.8rem;\n  display: inline-block;\n  transition: all 0.5s;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.2);\n  &[disabled] {\n    opacity: 0.5;\n  }\n  &:hover {\n    background: rgba(230, 10, 40, 0.7);\n  }\n  &:active {\n    box-shadow: none;\n  }\n`\n\nexport default SickerButton\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAgBA;AAYA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AACA;AALA;AAIA;AAMA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAegBA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxEA;AA8EA;AAIA;;;;AA3HA;AACA;AA6HA;;;;;;;;;;;;;AC9LA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA2BA;;;;A","sourceRoot":""}