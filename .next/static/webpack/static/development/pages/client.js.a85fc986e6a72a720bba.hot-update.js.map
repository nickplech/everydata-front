{"version":3,"file":"static/webpack/static/development/pages/client.js.a85fc986e6a72a720bba.hot-update.js","sources":["webpack:///./components/Clients.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Client from './Client'\nimport Pagination from './Pagination'\nimport { perPage } from '../config'\nimport Error from './ErrorMessage'\n\nconst SINGLE_CLIENT_QUERY = gql`\n  query SINGLE_CLIENT_QUERY($id: ID!) {\n    client(where: { id: $id }) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n    }\n  }\n`\n\nconst SINGLE_MY_CLIENT_QUERY = gql`\n  query SINGLE_MY_CLIENT_QUERY($id: ID!, $userId: ID!) {\n    myClient(where: { id: $id, userId: $id }) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n    }\n  }\n`\nconst ALL_USER_CLIENTS_QUERY = gql`\n  query ALL_USER_CLIENTS_QUERY($id: ID!) {\n    myClients(where: { user: $id }) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n    }\n  }\n`\nconst ALL_CLIENTS_QUERY = gql`\n  query ALL_CLIENTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    clients(first: $first, skip: $skip, orderBy: lastName_ASC) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n    }\n  }\n`\n\nconst List = styled.div`\n  display: grid;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  grid-template-rows: 1fr 50vh 1fr;\n  position: relative;\n  z-index: 0;\n`\n\nconst Clientlisting = styled.div`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-auto-rows: 20px;\n  background-color: rgba(20, 20, 100, 0.1);\n  max-width: 100%;\n  grid-gap: 10px;\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  padding-top: 0px;\n  overflow-y: scroll;\n  padding-bottom: 0px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n`\n\nclass Clients extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <List>\n          <Pagination page={this.props.page} />\n          <Query\n            query={ALL_CLIENTS_QUERY} // fetchPolicy=\n            variables={{ skip: this.props.page * perPage - perPage, first: 19 }}\n          >\n            {({ data, error, loading }) => {\n              if (loading) return <p>Loading...</p>\n              if (error) return <p>Error: {error.message}</p>\n              return (\n                <Clientlisting>\n                  {data.clients.map(client => (\n                    <Client client={client} key={client.id} />\n                  ))}\n                </Clientlisting>\n              )\n            }}\n          </Query>\n          <Pagination page={this.props.page} />\n        </List>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Clients\nexport {\n  ALL_CLIENTS_QUERY,\n  SINGLE_CLIENT_QUERY,\n  SINGLE_MY_CLIENT_QUERY,\n  ALL_CLIENTSUSERS_QUERY,\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AAWA;AAYA;AAaA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1BA;AACA;AA4BA;;;;;A","sourceRoot":""}