{"version":3,"file":"static/webpack/static/development/pages/hipaa.js.9a53da5da22adab1bab8.hot-update.js","sources":["webpack:///./components/Accordian.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport posed from 'react-pose'\nimport styled from 'styled-components'\n\nconst Content = posed.div({\n  closed: { height: 0 },\n  open: { height: 'auto' },\n})\n\nconst StyledAccordian = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n    color: white;\n    font-family: 'PT Sans', Helvetica, sans-serif;\n  }\n\n  h1 {\n    margin-bottom: 20px;\n    color: Black;\n    text-align: center;\n  }\n  h2 {\n    margin: 0;\n    color: white;\n    font-size: 16px;\n    width: 50%;\n  }\n\n  .title {\n    cursor: pointer;\n    background-image: linear-gradient(\n      -180deg,\n      rgba(100, 100, 240, 1) 0%,\n      rgba(100, 160, 220, 1) 300px\n    );\n    padding: 10px 20px;\n  }\n\n  .content {\n    overflow: hidden;\n    font-size: 18px;\n    background: rgba(100, 220, 240, 0.4);\n    color: white;\n    width: 50%;\n  }\n\n  .content-wrapper {\n    padding: 20px 20px;\n  }\n`\nconst Plus = styled.div`\n  display: inline-flex;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  background: white;\n  border: 2px solid white;\n  border-radius: 50%;\n  margin-right: 40px;\n  .plus {\n    display: inline-flex;\n\n    text-align: center;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n    color: purple;\n    font-size: 25px;\n    margin-bottom: 2px;\n    margin-right: 1px;\n  }\n`\nconst data = [\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `It doesn't matter how much content you put in each accordian. You only have to define one posed component that animates to \"auto\" and reuse that.`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n  {\n    title: 'Frequently Asked Question',\n    content: `height: 'auto'`,\n  },\n]\n\nclass Accordian extends React.Component {\n  state = { open: false }\n\n  render() {\n    const { open } = this.state\n\n    return (\n      <StyledAccordian>\n        <h1>Frequently Asked Questions</h1>\n        {data.map(({ title, content }, i) => (\n          <Fragment key={i}>\n            <h2\n              className=\"title\"\n              onClick={() => this.setState({ open: open === i ? false : i })}\n            >\n              <Plus>\n                <span className=\"plus\">{open === i ? '-' : '+'}</span>\n              </Plus>\n              {title}\n            </h2>\n            <Content className=\"content\" pose={open === i ? 'open' : 'closed'}>\n              <div className=\"content-wrapper\">{content}</div>\n            </Content>\n          </Fragment>\n        ))}\n      </StyledAccordian>\n    )\n  }\n}\n\nexport default Accordian\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AA2BA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAkBA;;;;AA3BA;AACA;AA6BA;;;;A","sourceRoot":""}