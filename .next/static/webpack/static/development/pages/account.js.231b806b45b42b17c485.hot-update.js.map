{"version":3,"file":"static/webpack/static/development/pages/account.js.231b806b45b42b17c485.hot-update.js","sources":["webpack:///./components/UpdateScheduleSettings.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport Form from './styles/Form'\nimport gql from 'graphql-tag'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\nimport { CURRENT_USER_QUERY } from './User'\n\nconst possibleColors = [\n  'blue',\n  'green',\n  'yellow',\n  'black',\n  'white',\n  'orange',\n  'purple',\n  'red',\n]\n\nconst CREATE_REASON_MUTATION = gql`\n  mutation CREATE_REASON_MUTATION(\n    $name: String!\n    $description: String\n    $provider: String\n    $color: String!\n    $user: ID!\n  ) {\n    createReason(\n      name: $name\n      description: $description\n      provider: $provider\n      color: $color\n      user: $user\n    ) {\n      id\n      name\n      description\n      provider\n      user {\n        id\n      }\n      color {\n        blue\n        green\n        yellow\n        black\n        white\n        orange\n        purple\n        red\n      }\n    }\n  }\n`\n\nconst Inner = styled.div`\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem 0;\n  padding-top: 0;\n\n  .dates {\n    font-family: montserrat, sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nconst StyledInput = styled.select`\n  width: 100%;\n  /* background: transparent; */\n  padding: 10px;\n  border: none;\n  font-size: 2rem;\n  outline: none;\n`\nclass UpdateScheduleSettings extends Component {\n  state = {\n    name: '',\n    description: '',\n    provider: '',\n    color: '',\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  createReason = async (e, createReasonMutation) => {\n    e.preventDefault()\n    const res = await createReasonMutation()\n    console.log(res)\n  }\n\n  handleCancelClick = e => {\n    e.preventDefault()\n    Router.back()\n  }\n\n  render() {\n    return (\n      <Query query={CURRENT_USER_QUERY}>\n        {({ data: { me } }) => {\n          return (\n            <Inner>\n              <Mutation\n                mutation={CREATE_REASON_MUTATION}\n                variables={{ ...this.state, user: me.id }}\n              >\n                {(createReason, { loading, error, called }) => (\n                  <Form onSubmit={e => this.createReason(e, createReason)}>\n                    <Error error={error} />\n                    {!error && !loading && called && (\n                      <Submitted>\n                        New Appointment Type Created SuccessFully!\n                      </Submitted>\n                    )}\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <label htmlFor=\"firstName\">\n                        Name of Appointment Type\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          placeholder=\"Name\"\n                          autoComplete=\"off\"\n                          required\n                          defaultValue={this.props.name}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <label htmlFor=\"description\">\n                        Description(optional):\n                        <input\n                          type=\"text\"\n                          id=\"description\"\n                          name=\"description\"\n                          placeholder=\"Description...\"\n                          defaultValue={this.props.description}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"color\">\n                        Select Color to Represent Appointment Type\n                        <StyledInput\n                          style={{ paddingTop: '3px', marginBottom: '10px' }}\n                          type=\"text\"\n                          id=\"color\"\n                          name=\"color\"\n                          placeholder=\"Assign Color\"\n                          required\n                          value={this.state.color}\n                          onChange={this.handleChange}\n                        >\n                          {possibleColors.map(color => {\n                            return (\n                              <option key={color} value={color}>\n                                {color}\n                              </option>\n                            )\n                          })}\n                        </StyledInput>\n                      </label>\n\n                      <label htmlFor=\"provider\">\n                        Appointment Belongs to Specific Provider?(optional)\n                        <input\n                          type=\"text\"\n                          id=\"provider\"\n                          name=\"provider\"\n                          placeholder=\"provider\"\n                          defaultValue={this.props.provider}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <SickButton type=\"submit\">\n                        Creat{loading ? 'ing' : 'e'} Appointment Type\n                      </SickButton>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            </Inner>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default UpdateScheduleSettings\nexport { CREATE_REASON_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AAoCA;AAAA;AAAA;AAAA;AAEA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnEA;AA4EA;AAGA;;;;AAhHA;AACA;AAkHA;;;;;A","sourceRoot":""}