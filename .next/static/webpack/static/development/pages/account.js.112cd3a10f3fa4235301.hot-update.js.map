{"version":3,"file":"static/webpack/static/development/pages/account.js.112cd3a10f3fa4235301.hot-update.js","sources":["webpack:///./components/UpdateUserProfile.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport Form from './styles/Form'\nimport Router from 'next/router'\n\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\nimport User, { CURRENT_USER_QUERY } from './User'\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem;\n  .dates {\n    font-family: montserrat, sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\n\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION(\n    $id: ID!\n    $name: String\n    $businessName: String!\n    $email: String!\n  ) {\n    updateUser(\n      id: $id\n      name: $name\n      businessName: $businessName\n      email: $email\n    ) {\n      id\n      name\n      businessName\n      email\n    }\n  }\n`\n\nclass UpdateUserProfile extends Component {\n  state = { name: '', businessName: '', email: '' }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  updateUser = async (e, updateUserMutation) => {\n    e.preventDefault()\n    console.log('Updating User!')\n    console.log(this.state)\n    const res = await updateUserMutation({\n      variables: {\n        id: this.props.id,\n        ...this.state,\n      },\n    })\n    // Router.push({\n    //   pathname: '/schedule',\n    // })\n  }\n\n  render() {\n    return (\n      <Inner>\n        <User>\n          <Query query={CURRENT_USER_QUERY}>\n            {({ data: { me }, loading }) => {\n              if (loading) return <p>Loading...</p>\n              if (!me) return <p>No User Found for ID {me.id}</p>\n              return (\n                <Mutation\n                  mutation={UPDATE_USER_MUTATION}\n                  variables={this.state}\n                >\n                  {(updateUser, { loading, error }) => (\n                    <Form onSubmit={e => this.updateUser(e, updateUser)}>\n                      <Error error={error} />\n                      <fieldset disabled={loading} aria-busy={loading}>\n                        <label htmlFor=\"firstName\">\n                          Account Manager's Name\n                          <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            required\n                            defaultValue={me.name}\n                            onChange={this.handleChange}\n                          />\n                        </label>\n                        <label htmlFor=\"businessName\">\n                          Edit Display Name:\n                          <input\n                            type=\"text\"\n                            id=\"businessName\"\n                            name=\"businessName\"\n                            placeholder=\"Business Display Name\"\n                            required\n                            defaultValue={me.businessName}\n                            onChange={this.handleChange}\n                          />\n                        </label>\n                        <label htmlFor=\"email\">\n                          Login/Contact Email Address\n                          <input\n                            type=\"text\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email Address\"\n                            required\n                            defaultValue={me.email}\n                            onChange={this.handleChange}\n                          />\n                        </label>\n\n                        <SickButton type=\"submit\">\n                          Sav{loading ? 'ing' : 'e'} Changes\n                        </SickButton>\n                      </fieldset>\n                    </Form>\n                  )}\n                </Mutation>\n              )\n            }}\n          </Query>\n        </User>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateUserProfile\nexport { UPDATE_USER_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAgBA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AACA;AALA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAczCA;AAiDA;AAKA;;;;AAzFA;AACA;AA2FA;;;;;A","sourceRoot":""}