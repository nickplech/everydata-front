{"version":3,"file":"static/webpack/static/development/pages/account.js.d81f9609fea8c9d9f25c.hot-update.js","sources":["webpack:///./components/UpdateUserProfile.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport Form from './styles/Form'\nimport gql from 'graphql-tag'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\n\nimport SickerButton from './styles/SickerButton'\n\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION(\n    $id: ID!\n    $name: String\n    $businessName: String\n    $email: String\n  ) {\n    updateUser(\n      name: $name\n      businessName: $businessName\n      email: $email\n      id: $id\n    ) {\n      id\n      name\n      businessName\n      email\n    }\n  }\n`\n\nconst Inner = styled.div`\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem 0;\n  padding-top: 0;\n\n  .dates {\n    font-family: montserrat, sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nclass UpdateUserProfiles extends Component {\n  state = {}\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  updateUser = async (e, updateUserMutation) => {\n    e.preventDefault()\n    console.log(this.state)\n\n    const res = await updateUserMutation({\n      variables: { id: this.props.id, ...this.state },\n    })\n  }\n\n  handleCancelClick = e => {\n    e.preventDefault()\n    Router.back()\n  }\n\n  render() {\n    return (\n      <Inner>\n        <Mutation\n          mutation={UPDATE_USER_MUTATION}\n          variables={{ ...this.state, id: this.props.id }}\n        >\n          {(updateUser, { loading, error, called }) => (\n            <Form onSubmit={e => this.updateUser(e, updateUser)}>\n              <Error error={error} />\n              {!error && !loading && called && (\n                <Submitted>Profile Updated Successfully!</Submitted>\n              )}\n              <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"id\">\n                  User ID for Reference\n                  <input\n                    name=\"id\"\n                    required\n                    defaultValue={this.props.id}\n                    onChange={this.handleChange}\n                    readOnly\n                  />\n                </label>\n                <label htmlFor=\"firstName\">\n                  Name on Account:\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    required\n                    defaultValue={this.props.name}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"businessName\">\n                  Edit Display Name:\n                  <input\n                    type=\"text\"\n                    id=\"businessName\"\n                    name=\"businessName\"\n                    placeholder=\"Business Display Name\"\n                    required\n                    defaultValue={this.props.businessName}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"email\">\n                  Login/Contact Email Address\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email Address\"\n                    required\n                    defaultValue={this.props.email}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <SickButton type=\"submit\">\n                  Sav{loading ? 'ing' : 'e'} Changes\n                </SickButton>\n                <SickerButton onClick={this.handleCancelClick}>\n                  Cancel\n                </SickerButton>\n              </fieldset>\n            </Form>\n          )}\n        </Mutation>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateUserProfiles\nexport { UPDATE_USER_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAqBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AAAA;AADA;AACA;AALA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxDA;AAiEA;;;;AA7FA;AACA;AA+FA;;;;;A","sourceRoot":""}