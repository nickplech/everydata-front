{"version":3,"file":"static/webpack/static/development/pages/index.js.d19a2a3b7464f5bf2e88.hot-update.js","sources":["webpack:///./components/Modal.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport ClientSearch from './ClientSearch'\n\nconst OPEN_MODAL_QUERY = gql`\n  query {\n    openModal @client\n  }\n`\nconst TOGGLE_MODAL_MUTATION = gql`\n  mutation {\n    toggleModal @client\n  }\n`\n\nconst BackDrop = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 990;\n`\n\nconst Modall = styled.div`\n  background-color: #fff;\n  border-radius: 25px;\n  display: grid;\n  grid-template-rows: 80px 1fr 35px;\n  grid-template-columns: 1fr 1fr;\n  position: absolute;\n  align-items: flex-start;\n  width: 500px;\n  height: 500px;\n  padding: 20px 25px;\n  z-index: 999;\n  box-shadow: 1px 1px 5px 3px rgba(0, 0, 0, 0.3);\n`\n\nconst Middle = styled.div`\n  grid-row: 2;\n  width: 100%;\n  grid-column: 1/3;\n  padding: 30px 0;\n`\nconst StyledInput = styled.select`\n  padding: 10px;\n  width: 100%;\n  background: transparent;\n  border: 2px solid rgba(20, 110, 240, 1);\n  font-size: 2rem;\n  outline: none;\n`\n\nconst Date = styled.div`\n  align-self: center;\n  grid-column: 1/3;\n  grid-row: 1;\n  justify-content: center;\n  p {\n    margin: 0;\n\n    font-size: 18px;\n\n    position: relative;\n    color: rgba(220, 20, 20, 1);\n  }\n  .title {\n    display: flex;\n    font-size: 18px;\n    margin: 0;\n    color: rgba(20, 110, 220, 1);\n    position: relative;\n  }\n  h3 {\n    margin: 0;\n  }\n`\nconst Cancel = styled.button`\n  background-color: #fff;\n  border-radius: 5px;\n  display: grid;\n  grid-row: 3;\n  grid-column: 2;\n  position: relative;\n  align-items: center;\n  justify-self: flex-start;\n  height: 100%;\n  background: rgba(220, 100, 120, 1);\n  color: white;\n  width: 100px;\n  font-size: 18px;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`\nconst Line = styled.div`\n  width: 100%;\n  margin: 0;\n\n  height: 3px;\n  background: grey;\n  grid-column: 1/3;\n`\nconst Save = styled.button`\n  background-color: #fff;\n  border-radius: 5px;\n  display: grid;\n  grid-column: 2;\n  grid-row: 3;\n  justify-self: flex-end;\n  position: relative;\n  align-items: center;\n  width: 100px;\n  height: 100%;\n  background: rgba(20, 200, 120, 1);\n  color: white;\n  font-size: 18px;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`\nconst REASONS = [\n  {\n    name: 'Botox',\n  },\n  {\n    name: 'Restylane',\n  },\n  {\n    name: 'Hair Laser',\n  },\n  {\n    name: 'Fraxel',\n  },\n  {\n    name: 'Face Removal',\n  },\n]\nclass Modal extends Component {\n  state = {\n    client: '',\n    reason: '',\n    date: '',\n    startTime: '',\n    length: '',\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  render() {\n    return (\n      <Mutation mutation={TOGGLE_MODAL_MUTATION}>\n        {toggleModal => (\n          <Query query={OPEN_MODAL_QUERY}>\n            {({ data }) => {\n              if (!data.openModal) {\n                return null\n              }\n              return (\n                <BackDrop>\n                  <Modall>\n                    <Date>\n                      <h1 className=\"title\">Appointment</h1>\n                      <p>{format(this.props.date, 'MMMM Do, YYYY')}</p>\n                      <h3 className=\"title\">Start Time:</h3>\n                      <p>{this.props.time}</p>\n                      <Line />\n                    </Date>\n\n                    <Middle>\n                      <form>\n                        <label>\n                          For:\n                          <ClientSearch />\n                        </label>\n                        <label htmlFor=\"reason\" className=\"required\">\n                          Type:\n                          <StyledInput\n                            type=\"text\"\n                            id=\"reason\"\n                            name=\"reason\"\n                            placeholder=\"Appointment Type\"\n                            autoComplete=\"off\"\n                            required\n                            value={this.state.reason}\n                            onChange={this.handleChange}\n                          >\n                            {REASONS.map(type => {\n                              return (\n                                <option key={type.name} value={type.name}>\n                                  {type.name}\n                                </option>\n                              )\n                            })}\n                          </StyledInput>\n                        </label>{' '}\n                      </form>\n                    </Middle>\n                    <Cancel onClick={toggleModal}>Cancel</Cancel>\n                    <Save onClick={toggleModal}>Save</Save>\n                  </Modall>\n                </BackDrop>\n              )\n            }}\n          </Query>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Modal\nexport { OPEN_MODAL_QUERY, TOGGLE_MODAL_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAMA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAsBA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAnDA;AAwDA;;;;AAxEA;AACA;AA0EA;;;;;A","sourceRoot":""}