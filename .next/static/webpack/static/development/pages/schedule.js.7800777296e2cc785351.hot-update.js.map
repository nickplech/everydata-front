{"version":3,"file":"static/webpack/static/development/pages/schedule.js.7800777296e2cc785351.hot-update.js","sources":["webpack:///./components/Modal.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport Select from 'react-select'\nimport ClientSearch from './ClientSearch'\n\nconst OPEN_MODAL_QUERY = gql`\n  query OPEN_MODAL_QUERY {\n    openModal @client\n  }\n`\nconst TOGGLE_MODAL_MUTATION = gql`\n  mutation TOGGLE_MODAL_MUTATION {\n    toggleModal @client\n  }\n`\n\nconst SINGLE_REASON_QUERY = gql`\n  query SINGLE_REASON_QUERY($id: ID!) {\n    reason(id: $id) {\n      id\n      name\n      color\n    }\n  }\n`\n\nconst BackDrop = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 990;\n`\n\nconst Modall = styled.div`\n  background-color: #fff;\n  border-radius: 25px;\n  display: grid;\n  grid-template-rows: 1fr 55px;\n  grid-template-columns: 1fr;\n  position: absolute;\n  align-items: flex-start;\n  width: 500px;\n  height: 500px;\n  padding: 15px 25px;\n  z-index: 999;\n  box-shadow: 1px 1px 5px 3px rgba(0, 0, 0, 0.3);\n`\n\nconst StyledInput = styled.select`\n  width: 100%;\n  border: 2px solid rgba(20, 20, 20, 0.4);\n  background: transparent;\n  margin: 5px 0 20px 0;\n  height: 50px;\n  font-size: 2rem;\n  font-weight: 500;\n  color: rgba(0, 0, 0, 0.5);\n  outline: none;\n  position: relative;\n  z-index: 990;\n  option {\n    background: white;\n    padding: 1rem;\n    transition: all 0.2s;\n    padding-left: 2rem;\n    display: flex;\n    align-items: center;\n  }\n`\nconst StyledTextArea = styled.textarea`\n  padding: 5px;\n  width: 100%;\n  background: transparent;\n  font-size: 2rem;\n  outline: none;\n  resize: none;\n  border: 2px solid rgba(220, 220, 220, 1);\n\n  &:focus {\n    outline: none;\n  }\n`\nconst Date = styled.div`\n  grid-column: 1;\n  grid-row: 1;\n  justify-content: flex-end;\n  border-radius: 25px 25px 0 0;\n  height: 100%;\n  padding: 5px 20px 0px 20px;\n\n  p {\n    margin: 10px;\n    color: ${props => props.theme.blue};\n    padding: 0px 0px;\n    font-size: 2.2rem;\n    position: relative;\n  }\n\n  h3 {\n    margin: 0;\n  }\n`\nconst Cancel = styled.a`\n  background-color: #fff;\n  border-radius: 20px;\n  display: grid;\n  grid-row: 2;\n  margin-left: 25px;\n  position: absolute;\n  left: 0;\n  align-items: center;\n  justify-content: center;\n  height: 60%;\n  background: rgba(220, 100, 120, 1);\n  color: white;\n  width: 100px;\n  cursor: pointer;\n  border: none;\n  transition: 0.3s;\n  font-size: 18px;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.1);\n  }\n`\n\nconst Save = styled.button`\n  background-color: #fff;\n  border: none;\n  border-radius: 20px;\n  display: grid;\n  right: 0;\n  grid-row: 2;\n  cursor: pointer;\n  position: absolute;\n  align-items: center;\n  width: 100px;\n  height: 60%;\n  background: rgba(20, 200, 120, 1);\n  color: white;\n  font-size: 18px;\n  margin-right: 25px;\n  transition: 0.3s;\n  z-index: 900;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.1);\n  }\n`\nconst colourStyles = {\n  input: styles => ({ ...styles }),\n  placeholder: styles => ({ ...styles }),\n  singleValue: (styles, { data }) => ({ ...styles }),\n}\nclass Modal extends Component {\n  state = {\n    clients: [],\n    reason: '',\n    date: '',\n    startTime: '',\n    length: '',\n    notes: '',\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n\n  handleReason = reason => {\n    this.setState({ reason: reason })\n    console.log(`Option selected:`, reason)\n  }\n\n  render() {\n    return (\n      <Mutation mutation={TOGGLE_MODAL_MUTATION}>\n        {toggleModal => (\n          <Query query={OPEN_MODAL_QUERY}>\n            {({ data }) => {\n              if (!data.openModal) {\n                return null\n              }\n              return (\n                <BackDrop>\n                  <Modall>\n                    <form\n                      onSubmit={async e => {\n                        e.preventDefault()\n                        await createAppointment()\n                      }}\n                    >\n                      <Date>\n                        <p>{format(this.props.date, 'MMMM Do, YYYY')}</p>\n                        <p>{this.props.time}</p>\n                      </Date>\n                      <ClientSearch\n                        name=\"clients\"\n                        type=\"text\"\n                        value={this.state.clients}\n                        onChange={this.handleChange}\n                      />\n                      <label htmlFor=\"reason\">\n                        Appointment Type:\n                        <StyledInput\n                          name=\"reason\"\n                          type=\"select\"\n                          multiple={false}\n                          value={this.state.reason}\n                          placeholder=\"Search your favourite book\"\n                          onChange={this.handleChange}\n                        >\n                          {this.props.reasons.map((reason, i) => (\n                            <option value={reason.name} key={reason.name}>\n                              {reason.name}\n                            </option>\n                          ))}\n                        </StyledInput>\n                      </label>\n\n                      <label htmlFor=\"note\">\n                        Notes:\n                        <StyledTextArea\n                          name=\"notes\"\n                          type=\"text\"\n                          value={this.state.notes}\n                          onChange={this.handleChange}\n                        />\n                      </label>\n\n                      <Cancel onClick={toggleModal}>Cancel</Cancel>\n                      <Save type=\"submit\" onClick={toggleModal}>\n                        Save\n                      </Save>\n                    </form>\n                  </Modall>\n                </BackDrop>\n              )\n            }}\n          </Query>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Modal\nexport { OPEN_MODAL_QUERY, TOGGLE_MODAL_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAMA;AAUA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AA0BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AACA;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AA7DA;AAkEA;;;;AAzFA;AACA;AA2FA;;;;;A","sourceRoot":""}