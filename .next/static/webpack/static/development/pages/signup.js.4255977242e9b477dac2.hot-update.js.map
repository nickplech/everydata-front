{"version":3,"file":"static/webpack/static/development/pages/signup.js.4255977242e9b477dac2.hot-update.js","sources":["webpack:///./components/RequestReset.js","webpack:///./components/SignInSwitch.js","webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`\n\nclass RequestReset extends Component {\n  state = {\n    email: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Mutation mutation={REQUEST_RESET_MUTATION} variables={this.state}>\n        {(requestReset, { error, loading, called }) => (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault()\n              await requestReset()\n              this.setState({\n                email: '',\n              })\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Forgot Your Password?</h2>\n              <Error error={error} />\n              {!error && !loading && called && (\n                <p>Check your email for a reset link</p>\n              )}\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.saveToState}\n                />\n              </label>\n\n              <SickButton type=\"submit\">Reset Password</SickButton>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default RequestReset\nexport { REQUEST_RESET_MUTATION }\n","import { Query } from 'react-apollo'\nimport { CURRENT_USER_QUERY } from './User'\nimport Signup from '../components/Signup'\nimport SignIn from '../components/SignIn'\nimport Footer from '../components/Footer'\nimport RequestReset from '../components/RequestReset'\nimport styled from 'styled-components'\n\nconst Columns = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  grid-gap: 20px;\n`\n\nconst Bottom = styled.div`\n  position: relative;\n\n  width: 100%;\n  margin-top: 300px;\n`\n\nconst DoDisplay = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({ data, loading }) => {\n      if (loading) return <p>Loading...</p>\n      if (!data.me) {\n        return (\n          <>\n            <Columns>\n              <Signup />\n              <SignIn />\n              <RequestReset />\n            </Columns>\n            <Bottom>\n              <Footer className=\"bottom\" />\n            </Bottom>\n          </>\n        )\n      }\n      return props.children\n    }}\n  </Query>\n)\n\nexport default DoDisplay\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\nimport { CURRENT_USER_QUERY } from './User'\nimport SickButton from './styles/SickButton'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $name: String!\n    $businessName: String!\n    $email: String!\n    $password: String!\n  ) {\n    signup(\n      name: $name\n      businessName: $businessName\n      email: $email\n      password: $password\n    ) {\n      id\n      name\n      businessName\n      email\n    }\n  }\n`\n\nclass Signup extends Component {\n  state = {\n    name: '',\n    businessName: '',\n    email: '',\n    password: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading }) => (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault()\n              await signup()\n              this.setState({\n                name: '',\n                businessName: '',\n                email: '',\n                password: '',\n              })\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Sign Up for An Account</h2>\n              <Error error={error} />\n              <label htmlFor=\"name\">\n                Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                  required\n                  value={this.state.name}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"businessName\">\n                Business Name\n                <input\n                  type=\"text\"\n                  name=\"businessName\"\n                  placeholder=\"Business Name\"\n                  required\n                  value={this.state.businessName}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={this.state.email}\n                  onChange={this.saveToState}\n                />\n              </label>\n\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  minLength={6}\n                  value={this.state.password}\n                  onChange={this.saveToState}\n                />\n              </label>\n\n              <SickButton type=\"submit\">Sign Up!</SickButton>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Signup\nexport { SIGNUP_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAkCA;;;;AA5CA;AACA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAnBA;AACA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAahEA;AAsEA;;;;AAvFA;AACA;AAyFA;;;;;A","sourceRoot":""}