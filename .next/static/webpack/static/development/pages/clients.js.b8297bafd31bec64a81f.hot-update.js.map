{"version":3,"file":"static/webpack/static/development/pages/clients.js.b8297bafd31bec64a81f.hot-update.js","sources":["webpack:///./components/DeleteClient.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { ALL_CLIENTS_QUERY } from './Clients'\n\nconst DELETE_CLIENT_MUTATION = gql`\n  mutation DELETE_CLIENT_MUTATION($id: ID!) {\n    deleteClient(id: $id) {\n      id\n      firstName\n    }\n  }\n`\n\nclass DeleteClient extends Component {\n  // update = (cache, payload) => {\n  //   const data = cache.readQuery({ query: ALL_CLIENTS_QUERY })\n  //   console.log(data, payload)\n  //   data.clients = data.clients.filter(\n  //     client => client.id !== payload.data.deleteClient.id,\n  //   )\n  //   cache.writeQuery({ query: ALL_CLIENTS_QUERY, data })\n  // }\n  render() {\n    const firstName = this.props.firstName\n    const lastName = this.props.lastName\n    return (\n      <Mutation\n        mutation={DELETE_CLIENT_MUTATION}\n        variables={{\n          id: this.props.id,\n          firstName: firstName,\n        }}\n        refetchQueries={[{ query: ALL_CLIENTS_QUERY }]}\n        // update={this.update}\n      >\n        {(deleteClient, { error }) => (\n          <button\n            onClick={() => {\n              if (\n                confirm(\n                  `Are you sure you want to delete ${firstName} ${lastName}`,\n                )\n              ) {\n                deleteClient().catch(err => {\n                  alert(err.message)\n                })\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteClient\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAQA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAmBA;;;;AAzCA;AACA;AA2CA;;;;A","sourceRoot":""}