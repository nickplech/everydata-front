{"version":3,"file":"static/webpack/static/development/pages/index.js.e4ac8e5c6d134527c07e.hot-update.js","sources":["webpack:///./components/Chat.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TextInput from './styles/TextInput'\nimport StyledChat from './styles/ChatStyles'\nimport Message from './Message.js'\n\nclass Chatroom extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      chats: [\n        {\n          username: 'James Saif',\n          content: (\n            <p>\n              Welcome to Universal Dialers, if you have any questions please\n              feel free to ask.\n            </p>\n          ),\n          img: './favicon.png',\n        },\n      ],\n      isOpen: false,\n    }\n\n    this.submitMessage = this.submitMessage.bind(this)\n  }\n\n  componentDidMount() {\n    this.scrollToBot()\n  }\n\n  componentDidUpdate() {\n    this.scrollToBot()\n  }\n\n  scrollToBot() {\n    ReactDOM.findDOMNode(this.refs.chats).scrollTop = ReactDOM.findDOMNode(\n      this.refs.chats,\n    ).scrollHeight\n  }\n  slideChat = () => {\n    const toggleChat = this.state.isOpen ? false : true\n    this.setState({ isOpen: toggleChat })\n  }\n\n  submitMessage(e) {\n    e.preventDefault()\n\n    this.setState(\n      {\n        chats: this.state.chats.concat([\n          {\n            username: 'Nathan',\n            content: <p>{ReactDOM.findDOMNode(this.refs.msg).value}</p>,\n            img: './favicon.png',\n          },\n        ]),\n      },\n      () => {\n        ReactDOM.findDOMNode(this.refs.msg).value = ''\n      },\n    )\n  }\n\n  render() {\n    const username = 'Nathan'\n    const { chats } = this.state\n    const { isOpen } = this.state\n\n    return (\n      <StyledChat open={isOpen}>\n        <h3 onClick={this.slideChat}>\n          Click Here{isOpen ? ' to Minimize' : ' for Support'}\n        </h3>\n        <ul className=\"chats\" ref=\"chats\">\n          {chats.map(chat => (\n            <Message chat={chat} user={username} />\n          ))}\n        </ul>\n        <TextInput onSubmit={e => this.submitMessage(e)}>\n          <input type=\"text\" ref=\"msg\" />\n          <button type=\"submit\">Submit</button>\n        </TextInput>\n      </StyledChat>\n    )\n  }\n}\n\nexport default Chatroom\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApCA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AARA;AAWA;AAbA;AAgBA;AAnBA;AAoBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAGA;;;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAFA;AAUA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjFA;AACA;AAmFA;;;;A","sourceRoot":""}