{"version":3,"file":"static/webpack/static/development/pages/client.js.939bb847cd004bed9cb8.hot-update.js","sources":["webpack:///./components/ReviewMessage.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport { Query, Mutation } from 'react-apollo'\nimport DaySelector from './DaySelector'\nimport { format } from 'date-fns'\nimport Timer from './TimePicker'\nimport User from './User'\n\nconst SEND_TEXT_MUTATION = gql`\n  mutation SEND_TEXT_MUTATION(\n    $to: String!\n    $text: String!\n    $client: ID!\n    $user: ID!\n  ) {\n    createTextReminder(to: $to, text: $text, client: $client, user: $user) {\n      id\n      user {\n        id\n      }\n      text\n      client {\n        id\n      }\n    }\n  }\n`\n\nconst TEXT_TEMPLATES_QUERY = gql`\n  query TEXT_TEMPLATES_QUERY {\n    textTemplates {\n      id\n      name\n      content\n    }\n  }\n`\n\nconst Back = styled.form`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 70px 1fr;\n  align-items: flex-end;\n  width: 100%;\n  height: 100%;\n  padding: 20px 20px;\n  z-index: 5;\n  border-radius: 20px;\n  border: 5px solid white;\n  box-shadow: 1px 0 4px 2px rgba(0, 0, 0, 0.1);\n  background-color: rgba(240, 240, 240, 1);\n`\n\n// const CharCount = styled.div`\n//   display: block;\n//   font-size: 11px;\n//   bottom: 70px;\n//   right: 40px;\n//   position: absolute;\n//   z-index: 10px;\n// `\n\nconst MessageEdit = styled.textarea`\n  grid-column: 2;\n  grid-row: 2;\n  position: relative;\n  z-index: 6;\n  width: 100%;\n  padding: 10px;\n  height: 100%;\n  border-radius: 10px;\n  font-size: 2rem;\n  resize: none;\n  border: none;\n  box-shadow: 0 0 4px 3px rgba(0, 0, 0, 0.05);\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Send = styled.button`\n  background: rgba(30, 110, 240, 1);\n  color: white;\n  font-weight: 800;\n  border: none;\n  width: 75px;\n  font-size: 2rem;\n\n  height: 75px;\n  font-size: 1.8rem;\n  border-radius: 50%;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  &:active {\n    box-shadow: none;\n  }\n  &[disabled] {\n    opacity: 0.5;\n  }\n  &:hover {\n    background: rgba(30, 110, 240, 0.9);\n  }\n`\n\nclass ReviewMessage extends Component {\n  state = {\n    time: '8:00 am',\n    date: '',\n    text: '',\n  }\n\n  handleDate = e => {\n    this.setState({ date: e.target.value })\n  }\n  handleText = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  render() {\n    const time = this.state.time\n    const date = format(this.state.date, 'ddd, MMM Do')\n    const text = this.state.text\n    return (\n      <User>\n        {({ data: { me } }) => {\n          const business = me.businessName.toString()\n          const phone = me.cellPhone.toString()\n          return (\n            <Query query={TEXT_TEMPLATES_QUERY}>\n              {({ data }) => {\n                const defaultTemplate = data.textTemplates[0]\n                let message = defaultTemplate.content\n                  .replace('<business>', business)\n                  .replace('<phone>', phone)\n                  .replace('<time>', time)\n                  .replace('<date>', date)\n                return (\n                  <Mutation\n                    mutation={SEND_TEXT_MUTATION}\n                    variables={{\n                      to: this.props.cellPhone,\n                      text: this.state.text,\n                      client: this.props.id,\n                      user: me.id,\n                    }}\n                  >\n                    {(createTextReminder, { error, loading, called }) => {\n                      return (\n                        <Back\n                          onSubmit={async e => {\n                            e.preventDefault()\n                            const res = await createTextReminder()\n                            console.log(res)\n                          }}\n                        >\n                          {!error && !loading && called && (\n                            <Submitted>\n                              Appointment Reminder Successfully Sent For\n                              Delivery\n                            </Submitted>\n                          )}\n\n                          <>\n                            <DaySelector handleDate={this.handleDate} />\n                            <Timer />\n                            <MessageEdit\n                              readOnly\n                              max={160}\n                              name=\"text\"\n                              type=\"text\"\n                              onChange={this.handleText}\n                              value={defaultTemplate.content\n                                .replace('<business>', business)\n                                .replace('<phone>', phone)\n                                .replace('<time>', time)\n                                .replace('<date>', date)}\n                            />\n                            <Send type=\"submit\">Send</Send>\n                          </>\n                        </Back>\n                      )\n                    }}\n                  </Mutation>\n                )\n              }}\n            </Query>\n          )\n        }}\n      </User>\n    )\n  }\n}\nexport default ReviewMessage\nexport { TEXT_TEMPLATES_QUERY, SEND_TEXT_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoBA;AAUA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAwBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAGA;AAGA;;;;AAtFA;AACA;AAuFA;;;;;A","sourceRoot":""}