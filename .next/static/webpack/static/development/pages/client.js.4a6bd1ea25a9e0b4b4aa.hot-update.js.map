{"version":3,"file":"static/webpack/static/development/pages/client.js.4a6bd1ea25a9e0b4b4aa.hot-update.js","sources":["webpack:///./components/DaySelector.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport User from './User'\nimport { format, addWeeks, eachDay, subDays } from 'date-fns'\n\nimport ActualDay from './ActualDay'\nimport TimePicker from './TimePicker'\n\nconst Flexer = styled.div`\n  display: flex;\n  flex-flow: column;\n  .center {\n    margin: 0 20px;\n  }\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50px;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nconst RemIcon = styled.div`\n  display: flex;\n  padding: 20px;\n  background: blueviolet;\n  border-radius: 50%;\n`\nconst DateSelector = styled.div`\n  border-radius: 8px 8px 0 0;\n  position: absolute;\n  margin-left: 20px;\n  margin-top: 100px;\n  display: grid;\n  width: 245px;\n  height: 132px;\n  grid-template-columns: 1;\n  grid-template-rows: 35px 30px 1fr;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.1);\n  background: white;\n  align-self: flex-start;\n\n  .month {\n    width: 100%;\n    display: grid;\n    height: 35px;\n    background: rgba(20, 110, 220, 1);\n    grid-row: 1;\n    /* grid-column: 1/8; */\n    border-radius: 8px 8px 0 0;\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    color: white;\n  }\n`\n\nconst Day = styled.div`\n  display: flex;\n  grid-row: 3;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  justify-content: center;\n`\nconst StyledDiv = styled.div`\n  display: flex;\n  color: lightslategray;\n  margin: 2px 1px;\n  grid-row: 2;\n  justify-content: space-around;\n  background: transparent;\n\n  p {\n    margin: 0 0px;\n  }\n`\nclass DaySelector extends Component {\n  state = {\n    today: new Date(),\n  }\n\n  render() {\n    const { today } = this.state\n    const twoWeeks = addWeeks(today, 2)\n    const result = eachDay(today, twoWeeks)\n    const oneWeek = addWeeks(today, 1)\n    const dayNameResult = eachDay(today, oneWeek)\n    const fixedOneWeek = dayNameResult.splice(-1, 1)\n    const fixedArray = result.splice(-1, 1)\n\n    return (\n      <User>\n        {({ data: { me } }) => (\n          <Flexer>\n            <DateSelector>\n              <div className=\"month\">{format(today, 'MMMM')}</div>\n\n              <StyledDiv>\n                {dayNameResult.map(weekDayName => {\n                  return <p key={weekDayName}> {format(weekDayName, 'dd')}</p>\n                })}\n              </StyledDiv>\n\n              <Day>\n                {result.map((day, i, arr) => {\n                  return <ActualDay key={day} date={format(day, 'D')} />\n                })}\n              </Day>\n            </DateSelector>\n          </Flexer>\n        )}\n      </User>\n    )\n  }\n}\n\nexport default DaySelector\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAWA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAqBA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}