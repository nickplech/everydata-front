{"version":3,"file":"static/webpack/static/development/pages/schedule.js.c99ba1e4f5de0a904132.hot-update.js","sources":["webpack:///./components/CalendarStats.js","webpack:///./components/SingleDay.js","webpack:///./lib/timeSlots.js"],"sourcesContent":["import React from 'react'\nimport dateFns from 'date-fns'\nimport Calendar from 'react-calendar/dist/entry.nostyle'\nimport styled from 'styled-components'\nimport SingleDay from './SingleDay'\n\nconst StatsDisplay = styled.div`\n  position: relative;\n  display: grid;\n  grid-row: 1/3;\n  grid-column: 1;\n  background-color: rgba(220, 220, 220, 0.3);\n  width: 100%;\n  height: 100%;\n  border: 5px solid white;\n  border-radius: 25px 25px 25px 25px;\n  box-shadow: 1px 1px 2px 3px rgba(0, 0, 0, 0.05);\n  z-index: 10;\n\n  .react-calendar {\n    width: 356px;\n    border-radius: 20px;\n    max-width: 100%;\n    box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n    height: 310px;\n    background: white;\n    margin: 5px auto;\n    font-family: Montserrat, Helvetica, sans-serif;\n    line-height: 1.125em;\n  }\n  .react-calendar,\n  .react-calendar *,\n  .react-calendar *:before,\n  .react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  .react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n  }\n  .react-calendar button:enabled:hover {\n    cursor: pointer;\n  }\n  .react-calendar__navigation {\n    height: 60px;\n    margin-bottom: 0.5em;\n  }\n  .react-calendar__navigation button {\n    min-width: 44px;\n    background: none;\n    font-size: 20px;\n    background-color: rgba(20, 110, 240, 1);\n    color: white;\n    &:first-child {\n      border-radius: 18px 0 0 0;\n    }\n    &:last-child {\n      border-radius: 0 16px 0 0;\n    }\n    &:nth-child(2) {\n      border-radius: 0;\n    }\n    &:nth-child(3) {\n      border-radius: 0;\n    }\n    &:nth-child(4) {\n      border-radius: 0;\n    }\n  }\n  .react-calendar__navigation button:enabled:hover,\n  .react-calendar__navigation button:enabled:focus {\n    background-color: #e6e6e6;\n  }\n  .react-calendar__navigation button[disabled] {\n    background-color: rgba(20, 110, 240, 0.1);\n  }\n  .react-calendar__month-view__weekdays {\n    text-align: center;\n    text-decoration: none;\n    font-size: 0.75em;\n    font-weight: 800;\n  }\n  .react-calendar__month-view__weekdays__weekday {\n    padding: 2em 0;\n  }\n  .react-calendar__month-view__weekNumbers {\n    font-weight: bold;\n  }\n  .react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75em;\n    padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n  }\n  .react-calendar__month-view__days__day--weekend {\n    color: rgba(240, 10, 10, 0.8);\n    font-weight: 800;\n  }\n  .react-calendar__month-view__days__day--neighboringMonth {\n    color: #969696;\n  }\n  .react-calendar__year-view .react-calendar__tile,\n  .react-calendar__decade-view .react-calendar__tile,\n  .react-calendar__century-view .react-calendar__tile {\n    padding: 2em 0.5em;\n  }\n  .react-calendar__tile {\n    max-width: 100%;\n    text-align: center;\n    padding: 0.75em 0.5em;\n    background: none;\n  }\n  .react-calendar__tile:disabled {\n    background-color: #f0f0f0;\n  }\n  .react-calendar__tile:enabled:hover,\n  .react-calendar__tile:enabled:focus {\n    background-color: #e6e6e6;\n  }\n  .react-calendar__tile--hasActive {\n    background: rgba(20, 110, 240, 1);\n    color: white;\n  }\n  .react-calendar__tile--hasActive:enabled:hover,\n  .react-calendar__tile--hasActive:enabled:focus {\n    background: #a9d4ff;\n  }\n  .react-calendar__tile--active {\n    background: rgba(20, 110, 240, 1);\n    color: white;\n  }\n  .react-calendar__tile--active:enabled:hover,\n  .react-calendar__tile--active:enabled:focus {\n    background: #1087ff;\n  }\n  .react-calendar--selectRange .react-calendar__tile--hover {\n    background-color: rgba(100, 100, 240, 1);\n    color: white;\n  }\n\n  abbr {\n    text-decoration: none;\n  }\n`\n\nclass CalendarStats extends React.Component {\n  state = {\n    date: dateFns.startOfDay(new Date()),\n    // today: dateFns.startOfDay(new Date()),\n  }\n\n  onChange = date => this.setState({ date })\n\n  changeModalDate = date => this.setState({ date })\n\n  handleToday = date => this.setState({ date: dateFns.startOfDay(new Date()) })\n\n  render() {\n    let date = this.state.date\n    return (\n      <>\n        <StatsDisplay>\n          <Calendar\n            name=\"date\"\n            onChange={this.onChange}\n            minDetail=\"decade\"\n            // onClick={this.handleClick}\n            value={date}\n            calendarType=\"US\"\n            returnValue=\"start\"\n          />\n        </StatsDisplay>\n        <SingleDay date={date} />\n      </>\n    )\n  }\n}\n\nexport default CalendarStats\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport posed from 'react-pose'\nimport { Mutation } from 'react-apollo'\nimport { TOGGLE_MODAL_MUTATION } from './Modal'\nimport { format, startOfDay } from 'date-fns'\nimport { Data_15, Data_20 } from '../lib/timeSlots'\nimport Modal from './Modal'\n\nconst TodayButton = posed.div({\n  hoverable: true,\n  pressable: true,\n  init: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.1,\n  },\n  press: {\n    scale: 1.05,\n  },\n})\nconst TopBlock = styled.div`\n  display: grid;\n  grid-column: 2;\n  grid-row: 1/3;\n  width: 100%;\n  height: 100%;\n  background: rgba(240, 240, 240, 1);\n`\nconst DayView = styled.div`\n  position: relative;\n  display: grid;\n  grid-row: 1/3;\n  grid-column: 2/3;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  box-shadow: 0 1px 5px 3px rgba(0, 0, 0, 0.05);\n  border: 5px solid white;\n  border-radius: 20px 20px 25px 25px;\n  z-index: -1;\n\n  .parent {\n    display: flex;\n    flex-flow: column;\n    position: absolute;\n    right: 0px;\n    align-items: flex-end;\n    border-radius: 15px 15px 0 0;\n    text-align: center;\n    padding-right: 20px;\n    margin-top: 1px;\n    height: 65px;\n    width: 100%;\n    background: rgba(20, 110, 240, 1);\n  }\n  .todayButton {\n    justify-content: center;\n    position: absolute;\n    display: flex;\n    border-radius: 5px;\n    background: white;\n    left: 15px;\n    border-top: 13px solid red;\n    top: 10px;\n    box-shadow: 0 1px 1px 2px rgba(0, 0, 0, 0.2);\n    width: 48px;\n    height: 45px;\n    cursor: pointer;\n    z-index: 50;\n    &:before {\n      content: 'TODAY';\n      color: white;\n      position: absolute;\n      font-size: 9px;\n      top: -14.8px;\n    }\n  }\n  .date {\n    display: flex;\n    text-transform: uppercase;\n    margin: 0;\n    color: rgba(230, 230, 230, 0.8);\n    font-size: 14px;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n  }\n  .sideDate {\n    display: flex;\n    color: white;\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 26px;\n    line-height: 26px;\n    padding-top: 10px;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n  }\n`\nconst DayGrid = styled.div`\n  display: grid;\n  position: relative;\n  grid-template-columns: 75px 1fr;\n  position: absolute;\n  grid-auto-rows: 22px;\n  border-radius: 0px 0 25px 0;\n  grid-gap: 1px;\n  width: 100%;\n  right: 0px;\n  margin-top: 67px;\n  height: 75vh;\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n`\nconst StyledInput = styled.button`\n  display: grid;\n  grid-column: 1;\n  text-align: left;\n  font-weight: 800;\n  height: 100%;\n\n  background: transparent;\n  border: none;\n  opacity: 1;\n  cursor: pointer;\n\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n`\nconst TimeCell = styled.div`\n  display: grid;\n  border-left: none;\n  grid-column: 2/3;\n\n  align-items: center;\n  border-bottom: none;\n  border: 0px solid rgba(243, 241, 244, 1);\n  background: rgba(243, 241, 244, 1);\n  cursor: pointer;\n\n  &:nth-child(4n + 2) {\n    display: grid;\n    grid-column: 1/3;\n    align-items: center;\n    /* border-bottom: none; */\n    border: 0px solid rgba(20, 110, 240, 0.65);\n    border-radius: 20px 0 0 20px;\n    background: rgba(20, 110, 240, 0.65);\n    color: grey;\n    border-right: none;\n  }\n  &:hover {\n    opacity: 0.5;\n  }\n  .number {\n    display: grid;\n    font-size: 14px;\n    align-self: center;\n\n    justify-content: flex-start;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n`\n\nclass SingleDay extends Component {\n  state = { selectedTime: '' }\n\n  update = e => {\n    this.setState({ selectedTime: e.target.value })\n  }\n\n  render() {\n    let date = this.props.date\n    let today = this.state.today\n    let time = this.state.selectedTime\n    return (\n      <DayView>\n        <div className=\"parent\">\n          <TodayButton onClick={this.props.handleToday} className=\"todayButton\">\n            {format(today, 'ddd')}\n          </TodayButton>\n          <div className=\"sideDate\">{format(date, 'MMMM Do, YYYY')}</div>\n          <div className=\"date\">{format(date, 'dddd')}</div>\n        </div>\n        <DayGrid>\n          <TopBlock />\n          {Data_15.map((timeblock, i) => {\n            return (\n              <Mutation key={i} mutation={TOGGLE_MODAL_MUTATION}>\n                {toggleModal => (\n                  <TimeCell>\n                    <StyledInput\n                      onDoubleClick={toggleModal}\n                      key={timeblock.time}\n                      className=\"number\"\n                      value={timeblock.time}\n                      onClick={this.update}\n                      readOnly\n                    >\n                      {timeblock.display}\n                    </StyledInput>\n                  </TimeCell>\n                )}\n              </Mutation>\n            )\n          })}\n        </DayGrid>\n        <Modal date={date} time={time} />\n      </DayView>\n    )\n  }\n}\n\nexport default SingleDay\n","const Data_20 = [\n  {\n    time: '7:00 am',\n  },\n  { time: '7:20 am' },\n  { time: '7:40 am' },\n\n  {\n    time: '8:00 am',\n  },\n  { time: '8:20 am' },\n  { time: '8:40 am' },\n\n  {\n    time: '9:00 am',\n  },\n  { time: '9:20 am' },\n  { time: '9:40 am' },\n\n  {\n    time: '10:00 am',\n  },\n  { time: '10:20 am' },\n  { time: '10:40 am' },\n  {\n    time: '11:00 am',\n  },\n  { time: '11:20 am' },\n  { time: '11:40 am' },\n\n  {\n    time: '12:00 pm',\n  },\n  { time: '12:20 pm' },\n  { time: '12:40 pm' },\n\n  {\n    time: '1:00 pm',\n  },\n  { time: '1:20 pm' },\n  { time: '1:40 pm' },\n\n  {\n    time: '2:00 pm',\n  },\n  { time: '2:20 pm' },\n  { time: '2:40 pm' },\n\n  {\n    time: '3:00 pm',\n  },\n  { time: '3:20 pm' },\n  { time: '3:40 pm' },\n\n  {\n    time: '4:00 pm',\n  },\n  { time: '4:20 pm' },\n  { time: '4:40 pm' },\n\n  {\n    time: '5:00 pm',\n  },\n  { time: '5:20 pm' },\n  { time: '5:40 pm' },\n\n  {\n    time: '6:00 pm',\n  },\n  { time: '6:20 pm' },\n  { time: '6:40 pm' },\n\n  {\n    time: '7:00 pm',\n  },\n  { time: '7:20 pm' },\n  { time: '7:40 pm' },\n\n  {\n    time: '8:00 pm',\n  },\n  { time: '8:20 pm' },\n  { time: '8:40 pm' },\n\n  {\n    time: '9:00 pm',\n  },\n  { time: '9:20 pm' },\n  { time: '9:40 pm' },\n]\n\nconst Data_15 = [\n  {\n    time: '7:00 am',\n    display: '7:00 am',\n  },\n  { time: '7:15 am', display: '' },\n  {\n    time: '7:30 am',\n    display: '',\n  },\n  {\n    time: '7:45 am',\n    display: '',\n  },\n  {\n    time: '8:00 am',\n    display: '8:00 am',\n  },\n  {\n    time: '8:15 am',\n    display: '',\n  },\n  {\n    time: '8:30 am',\n    display: '',\n  },\n  {\n    time: '8:45 am',\n    display: '',\n  },\n\n  {\n    time: '9:00 am',\n    display: '9:00 am',\n  },\n  {\n    time: '9:15 am',\n    display: '',\n  },\n  {\n    time: '9:30 am',\n    display: '',\n  },\n  {\n    time: '9:45 am',\n    display: '',\n  },\n\n  {\n    time: '10:00 am',\n    display: '10:00 am',\n  },\n  {\n    time: '10:15 am',\n    display: '',\n  },\n  {\n    time: '10:30 am',\n    display: '',\n  },\n  {\n    time: '10:45 am',\n    display: '',\n  },\n  {\n    time: '11:00 am',\n    display: '11:00 am',\n  },\n  {\n    time: '11:15 am',\n    display: '',\n  },\n  {\n    time: '11:30 am',\n    display: '',\n  },\n  {\n    time: '11:45 am',\n    display: '',\n  },\n\n  {\n    time: '12:00 pm',\n    display: '12:00 pm',\n  },\n  {\n    time: '12:15 pm',\n    display: '',\n  },\n  {\n    time: '12:30 pm',\n    display: '',\n  },\n  {\n    time: '12:45 pm',\n    display: '',\n  },\n  {\n    time: '1:00 pm',\n    display: '1:00 pm',\n  },\n  {\n    time: '1:15 pm',\n    display: '',\n  },\n  {\n    time: '1:30 pm',\n    display: '',\n  },\n  {\n    time: '1:45 pm',\n    display: '',\n  },\n  {\n    time: '2:00 pm',\n    display: '2:00 pm',\n  },\n  {\n    time: '2:15 pm',\n    display: '',\n  },\n  {\n    time: '2:30 pm',\n    display: '',\n  },\n  {\n    time: '2:45 pm',\n    display: '',\n  },\n  {\n    time: '3:00 pm',\n    display: '3:00 pm',\n  },\n  {\n    time: '3:15 pm',\n    display: '',\n  },\n  {\n    time: '3:30 pm',\n    display: '',\n  },\n  {\n    time: '3:45 pm',\n    display: '',\n  },\n  {\n    time: '4:00 pm',\n    display: '4:00 pm',\n  },\n  {\n    time: '4:15 pm',\n    display: '',\n  },\n  {\n    time: '4:30 pm',\n    display: '',\n  },\n  {\n    time: '4:45 pm',\n    display: '',\n  },\n  {\n    time: '5:00 pm',\n    display: '5:00 pm',\n  },\n  {\n    time: '5:15 pm',\n    display: '',\n  },\n  {\n    time: '5:30 pm',\n    display: '',\n  },\n  {\n    time: '5:45 pm',\n    display: '',\n  },\n  {\n    time: '6:00 pm',\n    display: '6:00 pm',\n  },\n  {\n    time: '6:15 pm',\n    display: '',\n  },\n  {\n    time: '6:30 pm',\n    display: '',\n  },\n  {\n    time: '6:45 pm',\n    display: '',\n  },\n  {\n    time: '7:00 pm',\n    display: '7:00 pm',\n  },\n  {\n    time: '7:15 pm',\n    display: '',\n  },\n  {\n    time: '7:30 pm',\n    display: '',\n  },\n  {\n    time: '7:45 pm',\n    display: '',\n  },\n  {\n    time: '8:00 pm',\n    display: '8:00 pm',\n  },\n  {\n    time: '8:15 pm',\n    display: '',\n  },\n  {\n    time: '8:30 pm',\n    display: '',\n  },\n  {\n    time: '8:45 pm',\n    display: '',\n  },\n  {\n    time: '9:00 pm',\n    display: '9:00 pm',\n  },\n  {\n    time: '9:15 pm',\n    display: '',\n  },\n  {\n    time: '9:30 pm',\n    display: '',\n  },\n  {\n    time: '9:45 pm',\n    display: '',\n  },\n]\n\nexport { Data_15, Data_20 }\n"],"mappings":"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","sourceRoot":""}