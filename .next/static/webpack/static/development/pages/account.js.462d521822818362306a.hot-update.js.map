{"version":3,"file":"static/webpack/static/development/pages/account.js.462d521822818362306a.hot-update.js","sources":["webpack:///./components/TabParent.js","webpack:///./components/UpdateScheduleSettings.js"],"sourcesContent":["import React from 'react'\nimport UpdateUserProfiles from './UpdateUserProfile'\nimport Tabs from './Tabs'\nimport styled from 'styled-components'\nimport SubscriptionManagement from './SubscriptionManagement'\nimport { Query } from 'react-apollo'\nimport UpdateScheduleSettings from './UpdateScheduleSettings'\nimport { CURRENT_USER_QUERY } from './User'\nconst Styled = styled.div`\n  /* font-family: sans-serif; */\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem;\n  padding-top: 0;\n`\n\nconst TabParent = () => (\n  <Styled>\n    <Query query={CURRENT_USER_QUERY}>\n      {({ data: { me }, error }) => {\n        return (\n          <Tabs\n            activeTab={{\n              id: 'tab1',\n            }}\n          >\n            <Tabs.Tab id=\"tab1\" title=\"Profile\">\n              <UpdateUserProfiles\n                id={me.id}\n                name={me.name}\n                email={me.email}\n                businessName={me.businessName}\n              />\n            </Tabs.Tab>\n            <Tabs.Tab id=\"tab2\" title=\"Schedule\">\n              <UpdateScheduleSettings />\n            </Tabs.Tab>\n            <Tabs.Tab id=\"tab3\" title=\"Subscription\">\n              <SubscriptionManagement />\n            </Tabs.Tab>\n          </Tabs>\n        )\n      }}\n    </Query>\n  </Styled>\n)\n\nexport default TabParent\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport Form from './styles/Form'\nimport gql from 'graphql-tag'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\nimport SickerButton from './styles/SickerButton'\n\nconst possibleColors = [\n  'BLUE',\n  'GREEN',\n  'YELLOW',\n  'BLACK',\n  'WHITE',\n  'ORANGE',\n  'PURPLE',\n  'RED',\n  'MAROON',\n  'LIGHTBLUE',\n]\n\nconst CREATE_REASON_MUTATION = gql`\n  mutation CREATE_REASON_MUTATION(\n    $id: ID!\n    $name: String!\n    $description: String\n    $provider: String\n    $color: String!\n  ) {\n    updateUser(\n      id: $id\n      name: $name\n      description: $description\n      provider: $provider\n      color: $color\n    ) {\n      id\n      name\n      description\n      provider\n      color\n    }\n  }\n`\n\nconst Inner = styled.div`\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem 0;\n  padding-top: 0;\n\n  .dates {\n    font-family: montserrat, sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nclass UpdateScheduleSettings extends Component {\n  state = {\n    name: '',\n    description: '',\n    provider: '',\n    color: '',\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  createReason = async (e, createReasonMutation) => {\n    e.preventDefault()\n    const res = await createReasonMutation()\n    console.log(res)\n  }\n\n  handleCancelClick = e => {\n    e.preventDefault()\n    Router.back()\n  }\n\n  render() {\n    return (\n      <Inner>\n        <Mutation mutation={CREATE_REASON_MUTATION} variables={this.state}>\n          {(createReason, { loading, error, called }) => (\n            <Form onSubmit={e => this.createReason(e, createReason)}>\n              <Error error={error} />\n              {!error && !loading && called && (\n                <Submitted>\n                  New Appointment Type Created SuccessFully!\n                </Submitted>\n              )}\n              <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"firstName\">\n                  Name of Appointment Type\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    required\n                    defaultValue={this.props.name}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"description\">\n                  Description(optional):\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Description...\"\n                    defaultValue={this.props.description}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"color\">\n                  Color to Identify Appointment Type\n                  <StyledInput\n                    style={{ paddingTop: '3px', marginBottom: '10px' }}\n                    type=\"text\"\n                    id=\"color\"\n                    name=\"color\"\n                    placeholder=\"Assign Color\"\n                    autoComplete=\"off\"\n                    required\n                    value={this.state.color}\n                    onChange={this.handleChange}\n                  >\n                    {possibleColors.map(color => {\n                      return (\n                        <option key={color} value={color}>\n                          {color}\n                        </option>\n                      )\n                    })}\n                  </StyledInput>\n                </label>\n                <label htmlFor=\"provider\">\n                  Appointment Belongs to Specific Provider?(optional)\n                  <input\n                    type=\"text\"\n                    id=\"provider\"\n                    name=\"provider\"\n                    placeholder=\"provider\"\n                    required\n                    defaultValue={this.props.provider}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <SickButton type=\"submit\">\n                  Sav{loading ? 'ing' : 'e'} Changes\n                </SickButton>\n                <SickerButton onClick={this.handleCancelClick}>\n                  Cancel\n                </SickerButton>\n              </fieldset>\n            </Form>\n          )}\n        </Mutation>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateScheduleSettings\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AA1BA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAwBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArEA;AA8EA;;;;AAzGA;AACA;AA2GA;;;;A","sourceRoot":""}