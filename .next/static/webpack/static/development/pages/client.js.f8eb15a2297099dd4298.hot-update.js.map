{"version":3,"file":"static/webpack/static/development/pages/client.js.f8eb15a2297099dd4298.hot-update.js","sources":["webpack:///./components/SingleClient.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Head from 'next/head'\nimport styled from 'styled-components'\nimport { SINGLE_CLIENT_QUERY } from './Clients'\n\nconst ALL_CLIENTS_REMINDERS = gql`\n  query ALL_CLIENTS_REMINDERS($clientId: ID!) {\n    textReminders(clientId: $clientId, orderBy: createdAt_ASC) {\n      id\n      text\n      user {\n        id\n      }\n      client {\n        id\n      }\n    }\n  }\n`\n\nconst GridSub = styled.div`\n  display: grid;\n  grid-column: 2;\n  grid-row: 1;\n  background-color: transparent;\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  border: 5px solid white;\n  border-radius: 25px;\n  z-index: -1;\n  height: 100%;\n  width: 100%;\n  overscroll-behavior: contain;\n  overflow: scroll;\n  &:after {\n    width: 100%;\n    position: fixed;\n    display: flex;\n    margin: 0 auto;\n    content: 'Appointment Reminder Log';\n    justify-content: center;\n    line-height: 28px;\n    color: white;\n    border-radius: 20px 20px 0 0;\n    padding: 2px 10px;\n    background: rgba(20, 110, 240, 1);\n  }\n`\n\nconst Lister = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column;\n  /* padding-bottom: 20px; */\n  box-sizing: border-box;\n  padding-left: 6px;\n  overflow-y: scroll;\n  background: white;\n`\nconst TextChunk = styled.div`\n  display: flex;\n  align-content: center;\n  margin: 0px 30px;\n  padding: 0px;\n  border-top: 1.5px solid rgba(220, 220, 220, 0.4);\n  &:first-child {\n    margin-top: 28px;\n    border-top: none;\n  }\n\n  .message-text {\n    align-self: center;\n    background: rgba(220, 220, 220, 0.8);\n    font-family: 'Montserrat', sans-serif;\n    color: black;\n    display: block;\n    font-size: 12px;\n    padding: 10px 14px;\n    margin: 30px 0;\n    border-radius: 8px;\n    width: 40%;\n    height: 80%;\n    max-width: 600px;\n    min-width: 300px;\n    @media (min-width: 1200px) {\n      font-size: 13px;\n    }\n  }\n`\nclass SingleClient extends Component {\n  render() {\n    return (\n      <GridSub>\n        <Query\n          query={SINGLE_CLIENT_QUERY}\n          variables={{\n            id: this.props.id,\n          }}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>\n            if (error) return <Error error={error} />\n            if (!data.client) return <p>No Client Found for {this.props.id}</p>\n            const client = data.client\n            return (\n              <Query\n                query={ALL_CLIENTS_REMINDERS}\n                variables={{ clientId: this.props.id }}\n              >\n                {({ data }) => {\n                  return (\n                    <Fragment>\n                      <Head>\n                        <title>\n                          Client | {client.firstName} {client.lastName}\n                        </title>\n                      </Head>\n                      <div>\n                        <Lister>\n                          {data.textReminders.map((message, index) => {\n                            return (\n                              <TextChunk key={index}>\n                                <div className=\"message-text\">\n                                  {message.text}\n                                </div>\n                              </TextChunk>\n                            )\n                          })}\n                        </Lister>\n                      </div>\n                    </Fragment>\n                  )\n                }}\n              </Query>\n            )\n          }}\n        </Query>\n      </GridSub>\n    )\n  }\n}\n\nexport default SingleClient\nexport { SINGLE_CLIENT_QUERY, ALL_CLIENTS_REMINDERS }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAeA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AA6BA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AAGA;AAIA;;;;AAlDA;AACA;AAoDA;;;;;A","sourceRoot":""}