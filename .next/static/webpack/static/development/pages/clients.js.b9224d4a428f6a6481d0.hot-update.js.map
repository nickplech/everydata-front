{"version":3,"file":"static/webpack/static/development/pages/clients.js.b9224d4a428f6a6481d0.hot-update.js","sources":["webpack:///./components/Clients.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Client from './Client'\nimport Pagination from './Pagination'\nimport { perPage } from '../config'\nimport { CURRENT_USER_QUERY } from './User'\nimport Error from './ErrorMessage'\n\nconst SINGLE_CLIENT_QUERY = gql`\n  query SINGLE_CLIENT_QUERY($id: ID!) {\n    client(id: $id) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n      user {\n        id\n      }\n    }\n  }\n`\n\nconst ALL_CLIENTS_QUERY = gql`\n  query ALL_CLIENTS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $user: ID!) {\n    clients(first: $first, skip: $skip, orderBy: lastName_ASC, user: {id:} $user}) {\n      id\n      firstName\n      lastName\n      cellPhone\n      birthDay\n      image\n      user {\n        id\n      }\n    }\n  }\n`\n\nconst List = styled.div`\n  display: grid;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  grid-template-rows: 1fr 50vh 1fr;\n  position: relative;\n  z-index: 0;\n`\n\nconst Clientlisting = styled.div`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-auto-rows: 20px;\n  background-color: rgba(20, 20, 100, 0.1);\n  max-width: 100%;\n  grid-gap: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding-top: 0px;\n\n  overflow-y: scroll;\n  padding-bottom: 0px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n`\n\nclass Clients extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Query query={CURRENT_USER_QUERY}>\n          {({ data: { me } }) => {\n            return (\n              <List>\n                <Pagination user={me.id} page={this.props.page} />\n                <Query\n                  query={ALL_CLIENTS_QUERY}\n                  variables={{\n                    skip: this.props.page * perPage - perPage,\n                    first: 19,\n                    user: me.id,\n                  }}\n                >\n                  {({ data, error, loading }) => {\n                    if (loading) return <p>Loading...</p>\n                    if (error) return <p>Error: {error.message}</p>\n                    return (\n                      <Clientlisting>\n                        {data.clients.map(client => (\n                          <Client client={client} key={client.id} />\n                        ))}\n                      </Clientlisting>\n                    )\n                  }}\n                </Query>\n                <Pagination user={me.id} page={this.props.page} />\n              </List>\n            )\n          }}\n        </Query>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Clients\nexport { ALL_CLIENTS_QUERY, SINGLE_CLIENT_QUERY }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAgBA;AAgBA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;;AApCA;AACA;AAsCA;;;;;A","sourceRoot":""}