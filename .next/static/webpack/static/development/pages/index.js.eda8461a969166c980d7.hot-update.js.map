{"version":3,"file":"static/webpack/static/development/pages/index.js.eda8461a969166c980d7.hot-update.js","sources":["webpack:///./components/Chat.js","webpack:///./components/DoDisplay.js","webpack:///./components/Message.js","webpack:///./components/styles/ChatStyles.js","webpack:///./components/styles/TextInput.js","webpack:///./components/styles/TextStyles.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TextInput from './styles/TextInput'\nimport StyledChat from './styles/ChatStyles'\nimport Message from './Message.js'\n\nclass Chatroom extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      chats: [\n        {\n          username: 'James Saif',\n          content: (\n            <p>\n              Welcome to Universal Dialers, if you have any questions please\n              feel free to ask.\n            </p>\n          ),\n          img: './favicon.png',\n        },\n      ],\n      isOpen: false,\n    }\n\n    this.submitMessage = this.submitMessage.bind(this)\n  }\n\n  componentDidMount() {\n    this.scrollToBot()\n  }\n\n  componentDidUpdate() {\n    this.scrollToBot()\n  }\n\n  scrollToBot() {\n    ReactDOM.findDOMNode(this.refs.chats).scrollTop = ReactDOM.findDOMNode(\n      this.refs.chats,\n    ).scrollHeight\n  }\n  slideChat = () => {\n    const toggleChat = this.state.isOpen ? false : true\n    this.setState({ isOpen: toggleChat })\n  }\n\n  submitMessage(e) {\n    e.preventDefault()\n\n    this.setState(\n      {\n        chats: this.state.chats.concat([\n          {\n            username: 'James',\n            content: <p>{ReactDOM.findDOMNode(this.refs.msg).value}</p>,\n            img: './favicon.png',\n          },\n        ]),\n      },\n      () => {\n        ReactDOM.findDOMNode(this.refs.msg).value = ''\n      },\n    )\n  }\n\n  render() {\n    const username = 'James'\n    const { chats } = this.state\n    const { isOpen } = this.state\n\n    return (\n      <StyledChat open={isOpen}>\n        <h3 onClick={this.slideChat}>\n          Click Here{isOpen ? ' to Minimize' : ' for Support'}\n        </h3>\n        <ul className=\"chats\" ref=\"chats\">\n          {chats.map(chat => (\n            <Message chat={chat} user={username} />\n          ))}\n        </ul>\n        <TextInput onSubmit={e => this.submitMessage(e)}>\n          <input type=\"text\" ref=\"msg\" />\n          <button type=\"submit\">Submit</button>\n        </TextInput>\n      </StyledChat>\n    )\n  }\n}\n\nexport default Chatroom\n","import { Query } from 'react-apollo'\nimport { CURRENT_USER_QUERY } from './User'\nimport HomePage from './HomePage'\nimport Chat from '../components/Chat'\n\nconst DoDisplay = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({ data, loading }) => {\n      if (loading) return <p>Loading...</p>\n      if (!data.me) {\n        return (\n          <div>\n            <HomePage />\n            <Chat />\n          </div>\n        )\n      }\n      return props.children\n    }}\n  </Query>\n)\n\nexport default DoDisplay\n","import React from 'react'\nimport TextStyles from './styles/TextStyles'\n\nconst Message = ({ chat, user }) => (\n  <TextStyles>\n    <li className={`chat ${user === chat.username ? 'right' : 'left'}`}>\n      {user !== chat.username && (\n        <img src={chat.img} alt={`${chat.username}'s profile pic`} />\n      )}\n      {chat.content}\n    </li>\n  </TextStyles>\n)\n\nexport default Message\n","import styled from 'styled-components'\n\nconst StyledChat = styled.div`\n  transform: translateY(93.5%);\n  transition: all 0.5s;\n  ${props => props.open && `transform: translateY(0);`};\n  width: 340px;\n  height: 600px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-radius: 5px 5px 0 0;\n  overflow: hidden;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.3);\n  position: fixed;\n  margin: 0;\n  z-index: 999;\n  right: 20px;\n  bottom: 0;\n  p {\n    margin: 0;\n    display: inline-block;\n  }\n\n  h3 {\n    font-family: 'Montserrat', sans-serif;\n    background-color: rgba(30, 228, 148, 0.7);\n    color: #fff;\n    margin: 0;\n    height: 40px;\n    font-weight: 300;\n    cursor: pointer;\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .chats {\n    box-sizing: border-box;\n    padding: 0 20px;\n    margin: 10px 0 0;\n    height: 510px;\n    overflow-y: scroll;\n  }\n\n  .chat {\n    background: rgba(255, 255, 255, 0.8);\n    position: relative;\n    padding: 5px 13px;\n    font-size: 14px;\n    border-radius: 10px;\n    list-style: none;\n    float: left;\n    clear: both;\n    margin: 10px 0;\n    max-width: 200px;\n  }\n\n  img {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    position: absolute;\n    top: -10px;\n    left: 0px;\n  }\n\n  .right {\n    float: right;\n    clear: both;\n  }\n\n  a {\n    text-decoration: none;\n    color: #3498db;\n  }\n`\n\nexport default StyledChat\n","import styled from 'styled-components'\n\nconst TextInput = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  input {\n    background: rgba(255, 255, 255, 0.5);\n    outline: 0;\n    border: 2px solid #1ee494;\n    padding: 0 5px;\n\n    height: 40px;\n    width: 290px;\n    color: white;\n    box-sizing: border-box;\n    font-size: 14px;\n    height: 40px;\n    background: rgba(30, 228, 148, 0.7);\n    display: flex;\n    align-items: center;\n  }\n\n  button {\n    background: transparent;\n    border: 1px solid #1ee494;\n    height: 30px;\n    width: 70px;\n    font-size: 14px;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    transition: all 0.3s ease;\n    justify-content: center;\n    height: 40px;\n    width: 80px;\n    color: white;\n    background: rgba(30, 228, 148, 0.7);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    &:focus {\n      outline: none;\n    }\n    &:hover {\n      background: #1ee494;\n      color: #fff;\n    }\n  }\n`\nexport default TextInput\n","import styled from 'styled-components'\n\nconst TextStyles = styled.div`\n  .chat {\n    background: rgba(255, 255, 255, 0.8);\n    position: relative;\n    padding: 5px 13px;\n    font-size: 14px;\n    border-radius: 10px;\n    list-style: none;\n    float: left;\n    clear: both;\n    margin: 10px 0;\n    max-width: 200px;\n  }\n\n  img {\n    width: 25px;\n    height: 25px;\n\n    border-radius: 50%;\n    position: absolute;\n    top: -10px;\n\n    left: -10px;\n  }\n\n  .right {\n    float: right;\n    clear: both;\n  }\n\n  a {\n    text-decoration: none;\n    color: #3498db;\n  }\n`\n\nexport default TextStyles\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApCA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AARA;AAWA;AAbA;AAgBA;AAnBA;AAoBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAGA;;;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAFA;AAUA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjFA;AACA;AAmFA;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAbA;AACA;AAgBA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAUA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAwEA;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAgDA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAoCA;;;;A","sourceRoot":""}