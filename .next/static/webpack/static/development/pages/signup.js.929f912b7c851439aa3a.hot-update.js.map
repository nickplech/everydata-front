{"version":3,"file":"static/webpack/static/development/pages/signup.js.929f912b7c851439aa3a.hot-update.js","sources":["webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { StepList } from './StepList'\nimport { Step } from './Step'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\nimport styled from 'styled-components'\nimport { CURRENT_USER_QUERY } from './User'\nimport SickButton from './styles/SickButton'\nimport MaskedInput from 'react-text-mask'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $firstName: String!\n    $lastName: String!\n    $cellPhone: String!\n    $businessName: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n    $plan: String!\n  ) {\n    signup(\n      firstName: $firstName\n      lastName: $lastName\n      cellPhone: $cellPhone\n      businessName: $businessName\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n      plan: $plan\n    ) {\n      id\n      firstName\n      lastName\n      cellPhone\n      businessName\n      email\n      plan\n    }\n  }\n`\nconst SignUpTitle = styled.h3`\n  @import url('https://fonts.googleapis.com/css?family=Pacifico|Roboto');\n  color: rgba(20, 110, 220, 1);\n  font-family: 'Pacifico', cursive;\n  font-size: 46px;\n  margin-bottom: 10px;\n`\n\nconst StyledSignUpStepper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column;\n`\n\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nconst ORDER_DATA = [\n  {\n    title: 'Test Classic Account',\n    id: 'plan_Ea8mmCdhMNHxxk',\n    price: 3999,\n  },\n  {\n    title: 'Classic Account',\n    id: 'plan_EW7xrpDzOE9d5I',\n    price: 3999,\n  },\n\n  {\n    title: 'HIPAA Compliant',\n    id: '3',\n    price: 1000,\n  },\n]\nclass Signup extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    cellPhone: '',\n    businessName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={{\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          cellPhone: this.state.cellPhone,\n          businessName: this.state.businessName,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n          plan: this.state.plan,\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading, called }) => (\n          <StyledSignUpStepper>\n            <SignUpTitle>Create an Account</SignUpTitle>\n            <Form\n              method=\"post\"\n              onSubmit={async e => {\n                e.preventDefault()\n                await signup()\n                this.setState({\n                  firstName: '',\n                  lastName: '',\n                  cellPhone: '',\n                  businessName: '',\n                  email: '',\n                  password: '',\n                  confirmPassword: '',\n                  plan: '',\n                })\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <Error error={error} />\n                {!error && !loading && called && (\n                  <Submitted>\n                    Submitted! Welcome to Perfect Day Reminders, please log in\n                    to begin your Free Trial\n                  </Submitted>\n                )}\n                <StepList>\n                  <Step>\n                    <h3 style={{ textAlign: 'center' }}>\n                      A Little About Your Business\n                    </h3>\n                    <label htmlFor=\"firstName\">\n                      First Name\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        placeholder=\"Account Holder's First Name\"\n                        required\n                        value={this.state.firstName}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                    <label htmlFor=\"lastName\">\n                      Last Name\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        placeholder=\"Account Holder's Last Name\"\n                        required\n                        value={this.state.lastName}\n                        onChange={this.saveToState}\n                      />\n                    </label>{' '}\n                    <label htmlFor=\"cellPhone\">\n                      Cell Phone Number\n                      <MaskedInput\n                        mask={[\n                          '(',\n                          /[1-9]/,\n                          /\\d/,\n                          /\\d/,\n                          ')',\n                          ' ',\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          '-',\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                        ]}\n                        type=\"text\"\n                        id=\"cellPhone\"\n                        name=\"cellPhone\"\n                        placeholder=\"Phone Number\"\n                        autoComplete=\"off\"\n                        required\n                        value={this.state.cellPhone}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                    <label htmlFor=\"businessName\">\n                      Business Name\n                      <input\n                        type=\"text\"\n                        name=\"businessName\"\n                        placeholder=\"Business Name\"\n                        required\n                        value={this.state.businessName}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                  </Step>\n                  <Step>\n                    <h3 style={{ textAlign: 'center' }}>\n                      Choose Your Login Credentials\n                    </h3>\n\n                    <label htmlFor=\"email\">\n                      Email\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        required\n                        value={this.state.email}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n\n                    <label htmlFor=\"password\">\n                      Password\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        minLength={6}\n                        value={this.state.password}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                    <label htmlFor=\"confirmPassword\">\n                      Confirm Your Password\n                      <input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholder=\"Confirm Password\"\n                        value={this.state.confirmPassword}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                  </Step>\n                  <Step>\n                    <label htmlFor=\"plan\">\n                      Select Which Plan Works for You:\n                      <select\n                        style={{ paddingTop: '3px', margin: '30px 0px' }}\n                        type=\"text\"\n                        name=\"plan\"\n                        placeholder=\"Appointment Type\"\n                        autoComplete=\"off\"\n                        required\n                        value={this.state.plan}\n                        onChange={this.saveToState}\n                      >\n                        {ORDER_DATA.map(plans => {\n                          return (\n                            <option key={plans.id} value={plans.id}>\n                              {plans.title}\n                            </option>\n                          )\n                        })}\n                      </select>\n                    </label>\n                    <SickButton style={{ float: 'right' }} type=\"submit\">\n                      Sign Up!\n                    </SickButton>\n                  </Step>\n                </StepList>\n              </fieldset>\n            </Form>\n          </StyledSignUpStepper>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Signup\nexport { SIGNUP_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA+BA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxyKA;;;;AAvMA;AACA;AAyMA;;;;;A","sourceRoot":""}