{"version":3,"file":"static/webpack/static/development/pages/signup.js.efc60e9c24c2529e2350.hot-update.js","sources":["webpack:///./components/Signup.js","webpack:///./components/Step.js","webpack:///./components/StepList.js","webpack:///./components/Stepper.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Stepper from './Stepper'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\n\nimport styled from 'styled-components'\nimport { CURRENT_USER_QUERY } from './User'\nimport SickButton from './styles/SickButton'\nimport MaskedInput from 'react-text-mask'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $firstName: String!\n    $lastName: String!\n    $cellPhone: String!\n    $businessName: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n    $plan: String!\n  ) {\n    signup(\n      firstName: $firstName\n      lastName: $lastName\n      cellPhone: $cellPhone\n      businessName: $businessName\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n      plan: $plan\n    ) {\n      id\n      firstName\n      lastName\n      cellPhone\n      businessName\n      email\n      plan\n    }\n  }\n`\n\nconst Margin = styled.div`\n  margin: 50px 25px;\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nconst ORDER_DATA = [\n  {\n    title: 'Test Classic Account',\n    id: 'plan_Ea8mmCdhMNHxxk',\n    price: 3999,\n  },\n  {\n    title: 'Classic Account',\n    id: 'plan_EW7xrpDzOE9d5I',\n    price: 3999,\n  },\n\n  {\n    title: 'HIPAA Compliant',\n    id: '3',\n    price: 1000,\n  },\n]\nclass Signup extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    cellPhone: '',\n    businessName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={{\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          cellPhone: this.state.cellPhone,\n          businessName: this.state.businessName,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n          plan: this.state.plan,\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading, called }) => (\n          <Margin>\n            <Form\n              method=\"post\"\n              onSubmit={async e => {\n                e.preventDefault()\n                await signup()\n                this.setState({\n                  firstName: '',\n                  lastName: '',\n                  cellPhone: '',\n                  businessName: '',\n                  email: '',\n                  password: '',\n                  confirmPassword: '',\n                  plan: '',\n                })\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign Up for An Account</h2>\n                <Error error={error} />\n                {!error && !loading && called && (\n                  <Submitted>\n                    Submitted! Welcome to Perfect Day Reminders, please log in\n                    to begin your Free Trial\n                  </Submitted>\n                )}\n                <label htmlFor=\"firstName\">\n                  First Name\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    placeholder=\"Account Holder's First Name\"\n                    required\n                    value={this.state.firstName}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"lastName\">\n                  Last Name\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    placeholder=\"Account Holder's Last Name\"\n                    required\n                    value={this.state.lastName}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"cellPhone\">\n                  Cell Phone Number(Required for Verification)\n                  <MaskedInput\n                    mask={[\n                      '(',\n                      /[1-9]/,\n                      /\\d/,\n                      /\\d/,\n                      ')',\n                      ' ',\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      '-',\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                    ]}\n                    type=\"text\"\n                    id=\"cellPhone\"\n                    name=\"cellPhone\"\n                    placeholder=\"Phone Number\"\n                    autoComplete=\"off\"\n                    required\n                    value={this.state.cellPhone}\n                    onChange={this.saveToState}\n                  />\n                </label>\n\n                <label htmlFor=\"businessName\">\n                  Business Name\n                  <input\n                    type=\"text\"\n                    name=\"businessName\"\n                    placeholder=\"Business Name\"\n                    required\n                    value={this.state.businessName}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n\n                <label htmlFor=\"password\">\n                  Password\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    minLength={6}\n                    value={this.state.password}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"confirmPassword\">\n                  Confirm Your Password\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    value={this.state.confirmPassword}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"plan\">\n                  Select Which Plan Works for You:\n                  <select\n                    style={{ paddingTop: '3px', marginBottom: '10px' }}\n                    type=\"text\"\n                    name=\"plan\"\n                    placeholder=\"Appointment Type\"\n                    autoComplete=\"off\"\n                    required\n                    value={this.state.plan}\n                    onChange={this.saveToState}\n                  >\n                    {ORDER_DATA.map(plans => {\n                      return (\n                        <option key={plans.id} value={plans.id}>\n                          {plans.title}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </label>\n                <SickButton type=\"submit\">Sign Up!</SickButton>\n              </fieldset>\n            </Form>\n          </Margin>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Signup\nexport { SIGNUP_MUTATION }\n","import React from 'react'\n\nclass Step extends React.Component {\n  render() {\n    const {\n      isActive,\n      displayPrevious,\n      displayNext,\n      displaySubmit,\n      component,\n      children,\n    } = this.props\n\n    if (isActive === false) return null\n\n    return (\n      <React.Fragment>\n        {component ? React.createElement(component) : children}\n        <Previous\n          isActive={displayPrevious}\n          goToPreviousStep={() => this.props.goToPreviousStep()}\n        />\n        <Next\n          isActive={displayNext}\n          goToNextStep={() => this.props.goToNextStep()}\n        />\n        <Submit isActive={displaySubmit} />\n      </React.Fragment>\n    )\n  }\n}\n\nclass Next extends React.Component {\n  render() {\n    const { isActive } = this.props\n    if (isActive === false) return null\n\n    return <button onClick={() => this.props.goToNextStep()}>Next</button>\n  }\n}\n\nclass Previous extends React.Component {\n  render() {\n    const { isActive } = this.props\n    if (isActive === false) return null\n\n    return (\n      <button onClick={() => this.props.goToPreviousStep()}>Previous</button>\n    )\n  }\n}\n\nclass Submit extends React.Component {\n  render() {\n    const { isActive } = this.props\n    if (isActive === false) return null\n\n    return <button type=\"submit\">Submit</button>\n  }\n}\n\nexport { Step }\n","import React from 'react'\n\nclass StepList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentStep: 0,\n      totalSteps: this.props.children.length - 1,\n    }\n  }\n\n  goToPreviousStep = () => {\n    this.setState({ currentStep: this.state.currentStep - 1 })\n  }\n\n  goToNextStep = () => {\n    this.setState({ currentStep: this.state.currentStep + 1 })\n  }\n\n  render() {\n    const children = React.Children.map(this.props.children, (child, index) => {\n      const { currentStep, totalSteps } = this.state\n\n      return React.cloneElement(child, {\n        isActive: index === currentStep,\n        displayPrevious: currentStep > 0,\n        displayNext: currentStep < totalSteps,\n        displaySubmit: currentStep === totalSteps,\n        goToPreviousStep: () => this.goToPreviousStep(),\n        goToNextStep: () => this.goToNextStep(),\n      })\n    })\n\n    return children\n  }\n}\n\nexport { StepList }\n","import React from 'react'\nimport { StepList } from './StepList'\nimport { Step } from './Step'\n\nconst PageTwo = () => <h2>We have a second page.</h2>\n\nconst PageThree = () => <h2>Page three is working.</h2>\n\nconst Stepper = () => (\n  <StepList>\n    <Step>\n      <h1>Hello world on page one!</h1>\n    </Step>\n    <Step component={PageTwo} />\n    <Step component={PageThree} />\n  </StepList>\n)\n\nexport default Stepper\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAgCA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxlJA;AAyJA;;;;AAvLA;AACA;AAyLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjQA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3BA;AACA;AA6BA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AANA;AACA;AAQA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AARA;AACA;AAUA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AANA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AAAA;AAAA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AACA;AAbA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAQA;AAEA;AACA;;;;AAjCA;AACA;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AASA;;;;A","sourceRoot":""}