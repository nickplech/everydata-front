{"version":3,"file":"static/webpack/static/development/pages/account.js.1760b08ee6ef10d3b9dd.hot-update.js","sources":["webpack:///./components/UpdateScheduleSettings.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport Form from './styles/Form'\nimport gql from 'graphql-tag'\nimport chroma from 'chroma-js'\nimport Select from 'react-select'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport Error from './ErrorMessage'\nimport SickButton from './styles/SickButton'\nimport { ALL_REASONS_QUERY } from './SingleDay'\n\nconst CREATE_REASON_MUTATION = gql`\n  mutation CREATE_REASON_MUTATION(\n    $name: String!\n    $defaultLength: Int\n    $provider: String\n    $color: String!\n  ) {\n    createReason(\n      name: $name\n      defaultLength: $defaultLength\n      provider: $provider\n      color: $color\n    ) {\n      id\n      defaultLength\n      name\n      color\n    }\n  }\n`\n\nconst Inner = styled.div`\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem 0;\n  padding-top: 0;\n  .color {\n    margin: 15px 0;\n  }\n  .dates {\n    font-family: 'Montserrat', sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nconst colourOptions = [\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9' },\n  { value: 'blue', label: 'Blue', color: '#0052CC' },\n  { value: 'purple', label: 'Purple', color: '#5243AA' },\n  { value: 'red', label: 'Red', color: '#FF5630' },\n  { value: 'orange', label: 'Orange', color: '#FF8B00' },\n  { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n  { value: 'green', label: 'Green', color: '#36B37E' },\n  { value: 'forest', label: 'Forest', color: '#00875A' },\n  { value: 'slate', label: 'Slate', color: '#253858' },\n  { value: 'silver', label: 'Silver', color: '#666666' },\n]\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n})\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n    }\n  },\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n}\nclass UpdateScheduleSettings extends Component {\n  state = {\n    name: '',\n    defaultLength: 0,\n    provider: '',\n    checked: false,\n    selectedOption: null,\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  handleColor = selectedOption => {\n    selectedOption.toString()\n    this.setState({ selectedOption })\n    console.log(`Option selected:`, selectedOption)\n  }\n  createReason = async (e, createReasonMutation) => {\n    e.preventDefault()\n    const res = await createReasonMutation()\n    console.log(res)\n  }\n\n  handleCancelClick = e => {\n    e.preventDefault()\n    Router.back()\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption\n    return (\n      <Inner>\n        <Mutation\n          mutation={CREATE_REASON_MUTATION}\n          variables={{ ...this.state, color: this.state.selectedOption }}\n        >\n          {(createReason, { loading, error, called }) => (\n            <Form onSubmit={e => this.createReason(e, createReason)}>\n              <Error error={error} />\n              {!error && !loading && called && (\n                <Submitted>\n                  New Appointment Type Created SuccessFully!\n                </Submitted>\n              )}\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Create Appointment Types</h2>\n                <Query query={ALL_REASONS_QUERY}>\n                  {({ data: { reasons } }) => {\n                    return (\n                      <ul>\n                        {reasons.map(reason => {\n                          return <li>{reason.name}</li>\n                        })}\n                      </ul>\n                    )\n                  }}\n                </Query>\n                <label htmlFor=\"firstName\">\n                  Name of Appointment Type\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    autoComplete=\"off\"\n                    required\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label>\n                  Select Color to Identify Appointment Type\n                  <Select\n                    className=\"color\"\n                    styles={colourStyles}\n                    value={selectedOption}\n                    onChange={this.handleColor}\n                    options={colourOptions}\n                  />\n                </label>\n                <label htmlFor=\"defaultLength\">\n                  Default Length(optional):\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"800\"\n                    step=\"15\"\n                    id=\"defaultLength\"\n                    name=\"defaultLength\"\n                    value={this.state.defaultLength}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"provider\">\n                  Appointment Belongs to Specific Provider?(optional)\n                  <input\n                    type=\"text\"\n                    id=\"provider\"\n                    name=\"provider\"\n                    placeholder=\"provider\"\n                    value={this.state.provider}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <SickButton type=\"submit\">\n                  Creat{loading ? 'ing' : 'e'} Appointment Type\n                </SickButton>\n              </fieldset>\n            </Form>\n          )}\n        </Mutation>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateScheduleSettings\nexport { CREATE_REASON_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAqBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAOA;AATA;AAiBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAxBA;AACA;AAyBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApEA;AA6EA;;;;AAlHA;AACA;AAoHA;;;;;A","sourceRoot":""}