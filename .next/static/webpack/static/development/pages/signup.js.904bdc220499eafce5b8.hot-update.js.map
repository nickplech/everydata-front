{"version":3,"file":"static/webpack/static/development/pages/signup.js.904bdc220499eafce5b8.hot-update.js","sources":["webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\nimport styled from 'styled-components'\nimport { CURRENT_USER_QUERY } from './User'\nimport SickButton from './styles/SickButton'\nimport ORDER_DATA from '../lib/timeSlots'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $name: String!\n    $businessName: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n    $plan: String!\n    $title: String!\n  ) {\n    signup(\n      name: $name\n      businessName: $businessName\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n      plan: $plan\n      title: $title\n    ) {\n      id\n      name\n      businessName\n      email\n      plan\n      title\n    }\n  }\n`\n\nconst Margin = styled.div`\n  margin: 15px 25px;\n`\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\n\nclass Signup extends Component {\n  state = {\n    name: '',\n    businessName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: '',\n  }\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    // const ORDER_DATA = this.props.ORDER_DATA\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={{\n          name: this.state.name,\n          businessName: this.state.businessName,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n          // plan: ORDER_DATA.id,\n          // title: ORDER_DATA.title,\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading, called }) => (\n          <Margin>\n            <Form\n              method=\"post\"\n              onSubmit={async e => {\n                e.preventDefault()\n                await signup()\n                this.setState({\n                  name: '',\n                  businessName: '',\n                  email: '',\n                  password: '',\n                  confirmPassword: '',\n                  plan: '',\n                })\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign Up for An Account</h2>\n                <Error error={error} />\n                {!error && !loading && called && (\n                  <Submitted>\n                    Submitted! Welcome to Perfect Day Reminders, please log in\n                    to begin your Free Trial\n                  </Submitted>\n                )}\n                <label htmlFor=\"name\">\n                  Name\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Full Name\"\n                    required\n                    value={this.state.name}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"businessName\">\n                  Business Name\n                  <input\n                    type=\"text\"\n                    name=\"businessName\"\n                    placeholder=\"Business Name\"\n                    required\n                    value={this.state.businessName}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n\n                <label htmlFor=\"password\">\n                  Password\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    minLength={6}\n                    value={this.state.password}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"confirmPassword\">\n                  Confirm Your Password\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    value={this.state.confirmPassword}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"plan\">\n                  <input\n                    style={{ paddingTop: '3px', marginBottom: '10px' }}\n                    type=\"text\"\n                    id=\"plan\"\n                    name=\"plan\"\n                    placeholder=\"Appointment Type\"\n                    autoComplete=\"off\"\n                    required\n                    value={this.state.plan}\n                    onChange={this.handleChange}\n                  >\n                    {ORDER_DATA.map(kitt => {\n                      return (\n                        <option key={kitt.id} value={kitt.id}>\n                          {kitt.title}\n                        </option>\n                      )\n                    })}\n                  </input>\n                </label>\n                <SickButton type=\"submit\">Sign Up!</SickButton>\n              </fieldset>\n            </Form>\n          </Margin>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Signup\nexport { SIGNUP_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA6BA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AARA;AASA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAevGA;AA8GA;;;;AA1IA;AACA;AA4IA;;;;;A","sourceRoot":""}