{"version":3,"file":"static/webpack/static/development/pages/account.js.8af171a6c8b555907bec.hot-update.js","sources":["webpack:///./components/UpdateScheduleSettings.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport Form from './styles/Form'\nimport gql from 'graphql-tag'\nimport chroma from 'chroma-js'\nimport Select from 'react-select'\nimport Router from 'next/router'\nimport Error from './ErrorMessage'\nimport MyDropdown from './SlideDown'\nimport styled from 'styled-components'\nimport SickButton from './styles/SickButton'\nimport SickerButton from './styles/SickerButton'\nimport Reason from './Reason'\nimport { TOGGLE_SLIDE_MUTATION } from './SlideDown'\nimport { ALL_REASONS_QUERY } from './SingleDay'\n\nconst CREATE_REASON_MUTATION = gql`\n  mutation CREATE_REASON_MUTATION(\n    $name: String!\n    $defaultLength: Int\n    $provider: String\n    $color: String!\n  ) {\n    createReason(\n      name: $name\n      defaultLength: $defaultLength\n      provider: $provider\n      color: $color\n    ) {\n      id\n      defaultLength\n      name\n      color\n    }\n  }\n`\n\nconst Inner = styled.div`\n  text-align: left;\n  max-width: ${props => props.theme.innerWidth};\n  margin: 0 auto;\n  padding: 2rem 0;\n  padding-top: 0;\n  .color {\n    margin: 15px 0;\n  }\n  .dates {\n    font-family: 'Montserrat', sans-serif;\n    text-transform: uppercase;\n    opacity: 0.5;\n    &:focus {\n      opacity: 1;\n    }\n    &:active {\n      opacity: 1;\n    }\n  }\n`\nconst Flex = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`\nconst Types = styled.h2`\n  display: inline-flex;\n`\nconst AButton = styled.a`\n  background: rgba(20, 110, 240, 1);\n  border-radius: 50%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 25px;\n  width: 25px;\n  margin: 0px 10px;\n  box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.3);\n  border: none;\n  position: relative;\n  z-index: 20;\n  cursor: pointer;\n  opacity: 0.6;\n  outline: none;\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n  &:hover {\n    opacity: 0.7;\n  }\n  .child {\n    position: absolute;\n    justify-self: center;\n    display: flex;\n    font-family: 'Montserrat', sans-serif;\n    color: white;\n    font-size: 2.8rem;\n    padding-left: 0px;\n  }\n`\n\nconst Submitted = styled.p`\n  color: green;\n  background: white;\n  padding: 15px 15px;\n  border-left: 5px solid green;\n`\nconst colourOptions = [\n  { value: 'blue', label: 'Blue', color: '#0052CC' },\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9' },\n  { value: 'purple', label: 'Purple', color: '#5243AA' },\n  { value: 'red', label: 'Red', color: '#FF5630' },\n  { value: 'orange', label: 'Orange', color: '#FF8B00' },\n  { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n  { value: 'green', label: 'Green', color: '#36B37E' },\n  { value: 'forest', label: 'Forest', color: '#00875A' },\n  { value: 'slate', label: 'Slate', color: '#253858' },\n  { value: 'silver', label: 'Silver', color: '#666666' },\n]\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n})\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n    }\n  },\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n}\nclass UpdateScheduleSettings extends Component {\n  state = {\n    name: '',\n    defaultLength: 0,\n    provider: '',\n    checked: false,\n    selectedOption: 'blue',\n    openSlide: false,\n  }\n  handleChange = e => {\n    const { name, type, value } = e.target\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n  handleColor = selectedOption => {\n    this.setState({ selectedOption: selectedOption })\n    console.log(`Option selected:`, selectedOption)\n  }\n  createReason = async (e, createReasonMutation) => {\n    e.preventDefault()\n    const res = await createReasonMutation()\n    console.log(res)\n  }\n\n  handleCancelClick = e => {\n    e.preventDefault()\n    Router.back()\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption\n    return (\n      <Inner>\n        <Query query={ALL_REASONS_QUERY}>\n          {({ data, loading, error }) => {\n            if (error) return <Error error={error} />\n            if (loading) return <p>Loading...</p>\n            console.log(data)\n            return (\n              <Mutation\n                mutation={CREATE_REASON_MUTATION}\n                variables={{\n                  ...this.state,\n                  color: this.state.selectedOption.color,\n                }}\n              >\n                {(createReason, { loading, error, called }) => (\n                  <Form onSubmit={e => this.createReason(e, createReason)}>\n                    <Error error={error} />\n                    {!error && !loading && called && (\n                      <Submitted>\n                        New Appointment Type Created SuccessFully!\n                      </Submitted>\n                    )}\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <Mutation mutation={TOGGLE_SLIDE_MUTATION}>\n                        {toggleSlide => (\n                          <>\n                            <Types>Appointment Types</Types>\n                            <AButton onClick={toggleSlide}>\n                              <div className=\"child\">+</div>\n                            </AButton>\n                          </>\n                        )}\n                      </Mutation>\n                      <Flex style={{ padding: '0' }}>\n                        {data.reasons.map(reason => {\n                          return <Reason key={reason.id} reason={reason} />\n                        })}\n                      </Flex>\n                      <MyDropdown>\n                        <label htmlFor=\"firstName\">\n                          Name of Appointment Type\n                          <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            autoComplete=\"off\"\n                            required\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                          />\n                        </label>\n                        <label>\n                          Select Color to Identify Appointment Type\n                          <Select\n                            className=\"color\"\n                            styles={colourStyles}\n                            value={selectedOption}\n                            onChange={this.handleColor}\n                            options={colourOptions}\n                          />\n                        </label>\n                        <label htmlFor=\"defaultLength\">\n                          Default Length:\n                          <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"800\"\n                            step=\"15\"\n                            id=\"defaultLength\"\n                            name=\"defaultLength\"\n                            value={this.state.defaultLength}\n                            onChange={this.handleChange}\n                          />\n                        </label>\n                        <label htmlFor=\"provider\">\n                          Appointment Belongs to Specific Provider?\n                          <input\n                            type=\"text\"\n                            id=\"provider\"\n                            name=\"provider\"\n                            placeholder=\"provider\"\n                            value={this.state.provider}\n                            onChange={this.handleChange}\n                          />\n                        </label>{' '}\n                        <SickButton type=\"submit\">\n                          Creat{loading ? 'ing' : 'e'} Appointment Type\n                        </SickButton>{' '}\n                        <SickerButton onClick={this.handleCancelClick}>\n                          Cancel\n                        </SickerButton>\n                      </MyDropdown>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            )\n          }}\n        </Query>\n      </Inner>\n    )\n  }\n}\n\nexport default UpdateScheduleSettings\nexport { CREATE_REASON_MUTATION }\n"],"mappings":"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","sourceRoot":""}